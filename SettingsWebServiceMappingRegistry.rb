# encoding: UTF-8
# Generated by wsdl2ruby (SOAP4R-NG/2.0.3)
require_relative 'SettingsWebService.rb'
require 'soap/mapping'

module Brink; module Api

module SettingsWebServiceMappingRegistry
  EncodedRegistry = ::SOAP::Mapping::EncodedRegistry.new
  LiteralRegistry = ::SOAP::Mapping::LiteralRegistry.new
  NsArrays = "http://schemas.microsoft.com/2003/10/Serialization/Arrays"
  NsBrinkCredit = "http://schemas.datacontract.org/2004/07/Brink.Credit"
  NsBrinkFoundation = "http://schemas.datacontract.org/2004/07/Brink.Foundation"
  NsPos = "http://schemas.datacontract.org/2004/07/Pos"
  NsPosWebServiceData = "http://schemas.datacontract.org/2004/07/Pos.Web.Service.Data"
  NsPosWebServiceFaults = "http://schemas.datacontract.org/2004/07/Pos.Web.Service.Faults"
  NsTempuriOrg = "http://tempuri.org/"

  EncodedRegistry.register(
    :class => Brink::Api::ArrayOfCashDrawer,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfCashDrawer"),
    :schema_element => [
      ["cashDrawer", ["Brink::Api::CashDrawer[]", XSD::QName.new(NsPosWebServiceData, "CashDrawer")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::CashDrawer,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "CashDrawer"),
    :schema_element => [
      ["defaultBank", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "DefaultBank")], [0, 1]],
      ["drawerNumber", ["SOAP::SOAPUnsignedByte", XSD::QName.new(NsPosWebServiceData, "DrawerNumber")], [0, 1]],
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["isCompulsory", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsCompulsory")], [0, 1]],
      ["isPublic", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsPublic")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["terminalId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "TerminalId")], [0, 1]],
      ["type", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Type")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::ArrayOfDayPart,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfDayPart"),
    :schema_element => [
      ["dayPart", ["Brink::Api::DayPart[]", XSD::QName.new(NsPosWebServiceData, "DayPart")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::DayPart,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "DayPart"),
    :schema_element => [
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["startTime", ["SOAP::SOAPDateTime", XSD::QName.new(NsPosWebServiceData, "StartTime")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::ArrayOfDestination,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfDestination"),
    :schema_element => [
      ["destination", ["Brink::Api::Destination[]", XSD::QName.new(NsPosWebServiceData, "Destination")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::Destination,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "Destination"),
    :schema_element => [
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Description")], [0, 1]],
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["kitchenDescription", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "KitchenDescription")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::ArrayOfDiscount,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfDiscount"),
    :schema_element => [
      ["discount", ["Brink::Api::Discount[]", XSD::QName.new(NsPosWebServiceData, "Discount")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::Discount,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "Discount"),
    :schema_element => [
      ["active", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "Active")], [0, 1]],
      ["allowLaterDiscounts", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "AllowLaterDiscounts")], [0, 1]],
      ["allowPriorDiscounts", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "AllowPriorDiscounts")], [0, 1]],
      ["amount", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "Amount")], [0, 1]],
      ["discountedItemsEligible", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "DiscountedItemsEligible")], [0, 1]],
      ["eligibleItemGroupIds", ["Brink::Api::ArrayOfint", XSD::QName.new(NsPosWebServiceData, "EligibleItemGroupIds")], [0, 1]],
      ["eligibleItemId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "EligibleItemId")], [0, 1]],
      ["endDate", ["SOAP::SOAPDateTime", XSD::QName.new(NsPosWebServiceData, "EndDate")], [0, 1]],
      ["endTime", ["SOAP::SOAPDateTime", XSD::QName.new(NsPosWebServiceData, "EndTime")], [0, 1]],
      ["enforceMaximumAmount", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "EnforceMaximumAmount")], [0, 1]],
      ["enforceMaximumItems", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "EnforceMaximumItems")], [0, 1]],
      ["enforceMaximumPerOrder", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "EnforceMaximumPerOrder")], [0, 1]],
      ["excludeItemsFromProductMix", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "ExcludeItemsFromProductMix")], [0, 1]],
      ["friday", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "Friday")], [0, 1]],
      ["granularity", ["Brink::Api::DiscountGranularity", XSD::QName.new(NsPosWebServiceData, "Granularity")], [0, 1]],
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["isEmployeeDiscount", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsEmployeeDiscount")], [0, 1]],
      ["isLoyaltyDiscount", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsLoyaltyDiscount")], [0, 1]],
      ["managerNeeded", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "ManagerNeeded")], [0, 1]],
      ["maximumAmount", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "MaximumAmount")], [0, 1]],
      ["maximumItems", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "MaximumItems")], [0, 1]],
      ["maximumPerOrder", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "MaximumPerOrder")], [0, 1]],
      ["monday", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "Monday")], [0, 1]],
      ["mustEnterAmount", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "MustEnterAmount")], [0, 1]],
      ["mustEnterName", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "MustEnterName")], [0, 1]],
      ["mustEnterPercent", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "MustEnterPercent")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["openDrawer", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "OpenDrawer")], [0, 1]],
      ["printOrder", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "PrintOrder")], [0, 1]],
      ["printedName", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "PrintedName")], [0, 1]],
      ["rate", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "Rate")], [0, 1]],
      ["saturday", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "Saturday")], [0, 1]],
      ["startDate", ["SOAP::SOAPDateTime", XSD::QName.new(NsPosWebServiceData, "StartDate")], [0, 1]],
      ["startTime", ["SOAP::SOAPDateTime", XSD::QName.new(NsPosWebServiceData, "StartTime")], [0, 1]],
      ["sunday", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "Sunday")], [0, 1]],
      ["thursday", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "Thursday")], [0, 1]],
      ["tuesday", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "Tuesday")], [0, 1]],
      ["type", ["Brink::Api::DiscountType", XSD::QName.new(NsPosWebServiceData, "Type")], [0, 1]],
      ["useDateRangeFilter", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "UseDateRangeFilter")], [0, 1]],
      ["useDayFilter", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "UseDayFilter")], [0, 1]],
      ["useItemFilter", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "UseItemFilter")], [0, 1]],
      ["useItemGroupFilter", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "UseItemGroupFilter")], [0, 1]],
      ["useTimeRangeFilter", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "UseTimeRangeFilter")], [0, 1]],
      ["wednesday", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "Wednesday")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::ArrayOfEmployee,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfEmployee"),
    :schema_element => [
      ["employee", ["Brink::Api::Employee[]", XSD::QName.new(NsPosWebServiceData, "Employee")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::Employee,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "Employee"),
    :schema_element => [
      ["address1", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Address1")], [0, 1]],
      ["address2", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Address2")], [0, 1]],
      ["birthDate", ["SOAP::SOAPDateTime", XSD::QName.new(NsPosWebServiceData, "BirthDate")], [0, 1]],
      ["cellPhone", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "CellPhone")], [0, 1]],
      ["city", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "City")], [0, 1]],
      ["emailAddress", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "EmailAddress")], [0, 1]],
      ["firstName", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "FirstName")], [0, 1]],
      ["hireDate", ["SOAP::SOAPDateTime", XSD::QName.new(NsPosWebServiceData, "HireDate")], [0, 1]],
      ["homePhone", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "HomePhone")], [0, 1]],
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["identificationVerified", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IdentificationVerified")], [0, 1]],
      ["jobs", ["Brink::Api::EmployeeJobs", XSD::QName.new(NsPosWebServiceData, "Jobs")], [0, 1]],
      ["lastName", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "LastName")], [0, 1]],
      ["maritalStatus", ["Brink::Api::MaritalStatus", XSD::QName.new(NsPosWebServiceData, "MaritalStatus")], [0, 1]],
      ["middleName", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "MiddleName")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["notes", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Notes")], [0, 1]],
      ["payrollId", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "PayrollId")], [0, 1]],
      ["sSN", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "SSN")], [0, 1]],
      ["state", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "State")], [0, 1]],
      ["taxWithholdingAllowance", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "TaxWithholdingAllowance")], [0, 1]],
      ["terminated", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "Terminated")], [0, 1]],
      ["terminationDate", ["SOAP::SOAPDateTime", XSD::QName.new(NsPosWebServiceData, "TerminationDate")], [0, 1]],
      ["zip", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Zip")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::EmployeeJobs,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "EmployeeJobs"),
    :schema_element => [
      ["employeeJob", ["Brink::Api::EmployeeJob[]", XSD::QName.new(NsPosWebServiceData, "EmployeeJob")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::EmployeeJob,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "EmployeeJob"),
    :schema_element => [
      ["jobId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "JobId")], [0, 1]],
      ["payRate", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "PayRate")], [0, 1]],
      ["securityLevelId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "SecurityLevelId")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::ArrayOfItemGroup,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfItemGroup"),
    :schema_element => [
      ["itemGroup", ["Brink::Api::ItemGroup[]", XSD::QName.new(NsPosWebServiceData, "ItemGroup")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::ItemGroup,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ItemGroup"),
    :schema_basetype => XSD::QName.new(NsPosWebServiceData, "SettingsObject"),
    :schema_element => [
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["isDeleted", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsDeleted")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["alternateId", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "AlternateId")], [0, 1]],
      ["items", ["Brink::Api::ArrayOfItemGroupItem", XSD::QName.new(NsPosWebServiceData, "Items")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::SettingsObject,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "SettingsObject"),
    :schema_element => [
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["isDeleted", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsDeleted")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::ArrayOfItemGroupItem,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfItemGroupItem"),
    :schema_element => [
      ["itemGroupItem", ["Brink::Api::ItemGroupItem[]", XSD::QName.new(NsPosWebServiceData, "ItemGroupItem")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::ItemGroupItem,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ItemGroupItem"),
    :schema_element => [
      ["itemId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "ItemId")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::ArrayOfItem,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfItem"),
    :schema_element => [
      ["item", ["Brink::Api::Item[]", XSD::QName.new(NsPosWebServiceData, "Item")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::Item,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "Item"),
    :schema_basetype => XSD::QName.new(NsPosWebServiceData, "SettingsObject"),
    :schema_element => [
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["isDeleted", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsDeleted")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["active", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "Active")], [0, 1]],
      ["askName", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "AskName")], [0, 1]],
      ["askPrice", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "AskPrice")], [0, 1]],
      ["availableFriday", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "AvailableFriday")], [0, 1]],
      ["availableMonday", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "AvailableMonday")], [0, 1]],
      ["availableSaturday", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "AvailableSaturday")], [0, 1]],
      ["availableSelectDates", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "AvailableSelectDates")], [0, 1]],
      ["availableSelectDays", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "AvailableSelectDays")], [0, 1]],
      ["availableSunday", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "AvailableSunday")], [0, 1]],
      ["availableThursday", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "AvailableThursday")], [0, 1]],
      ["availableTuesday", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "AvailableTuesday")], [0, 1]],
      ["availableWednesday", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "AvailableWednesday")], [0, 1]],
      ["brandAllocations", ["Brink::Api::ArrayOfBrandAllocation", XSD::QName.new(NsPosWebServiceData, "BrandAllocations")], [0, 1]],
      ["components", ["Brink::Api::ArrayOfItemCompositeComponent", XSD::QName.new(NsPosWebServiceData, "Components")], [0, 1]],
      ["cost", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "Cost")], [0, 1]],
      ["createdTime", ["SOAP::SOAPDateTime", XSD::QName.new(NsPosWebServiceData, "CreatedTime")], [0, 1]],
      ["datesAvailable", ["Brink::Api::DateRange", XSD::QName.new(NsPosWebServiceData, "DatesAvailable")], [0, 1]],
      ["giftCardItemType", ["Brink::Api::GiftCardItemType", XSD::QName.new(NsPosWebServiceData, "GiftCardItemType")], [0, 1]],
      ["includedModifiers", ["Brink::Api::ArrayOfItemIncludedModifier", XSD::QName.new(NsPosWebServiceData, "IncludedModifiers")], [0, 1]],
      ["ingredientItemIds", ["Brink::Api::ArrayOfint", XSD::QName.new(NsPosWebServiceData, "IngredientItemIds")], [0, 1]],
      ["isCombo", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsCombo")], [0, 1]],
      ["isGiftCard", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsGiftCard")], [0, 1]],
      ["isQuantityCounted", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsQuantityCounted")], [0, 1]],
      ["itemType", ["Brink::Api::ItemType", XSD::QName.new(NsPosWebServiceData, "ItemType")], [0, 1]],
      ["kitchenName", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "KitchenName")], [0, 1]],
      ["lastEditedTime", ["SOAP::SOAPDateTime", XSD::QName.new(NsPosWebServiceData, "LastEditedTime")], [0, 1]],
      ["modifierGroupIds", ["Brink::Api::ArrayOfint", XSD::QName.new(NsPosWebServiceData, "ModifierGroupIds")], [0, 1]],
      ["modifierTierId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "ModifierTierId")], [0, 1]],
      ["modifierWeight", ["SOAP::SOAPUnsignedByte", XSD::QName.new(NsPosWebServiceData, "ModifierWeight")], [0, 1]],
      ["nonRevenueItem", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "NonRevenueItem")], [0, 1]],
      ["pLU", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "PLU")], [0, 1]],
      ["price", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "Price")], [0, 1]],
      ["priceLevel", ["SOAP::SOAPUnsignedByte", XSD::QName.new(NsPosWebServiceData, "PriceLevel")], [0, 1]],
      ["pricePer", ["Brink::Api::PricePer", XSD::QName.new(NsPosWebServiceData, "PricePer")], [0, 1]],
      ["printerGroupId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "PrinterGroupId")], [0, 1]],
      ["revenueCenterId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "RevenueCenterId")], [0, 1]],
      ["sortPriority", ["SOAP::SOAPUnsignedByte", XSD::QName.new(NsPosWebServiceData, "SortPriority")], [0, 1]],
      ["tareId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "TareId")], [0, 1]],
      ["taxIds", ["Brink::Api::ArrayOfint", XSD::QName.new(NsPosWebServiceData, "TaxIds")], [0, 1]],
      ["unitName", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "UnitName")], [0, 1]],
      ["unitPrecision", ["SOAP::SOAPUnsignedByte", XSD::QName.new(NsPosWebServiceData, "UnitPrecision")], [0, 1]],
      ["videoGroupId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "VideoGroupId")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::ArrayOfItemCompositeComponent,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfItemCompositeComponent"),
    :schema_element => [
      ["itemCompositeComponent", ["Brink::Api::ItemCompositeComponent[]", XSD::QName.new(NsPosWebServiceData, "ItemCompositeComponent")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::ItemCompositeComponent,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ItemCompositeComponent"),
    :schema_element => [
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["itemGroupId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "ItemGroupId")], [0, 1]],
      ["items", ["Brink::Api::ArrayOfItemCompositeComponentItem", XSD::QName.new(NsPosWebServiceData, "Items")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["overridePrice", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "OverridePrice")], [0, 1]],
      ["price", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "Price")], [0, 1]],
      ["rollupPrice", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "RollupPrice")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::ArrayOfItemCompositeComponentItem,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfItemCompositeComponentItem"),
    :schema_element => [
      ["itemCompositeComponentItem", ["Brink::Api::ItemCompositeComponentItem[]", XSD::QName.new(NsPosWebServiceData, "ItemCompositeComponentItem")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::ItemCompositeComponentItem,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ItemCompositeComponentItem"),
    :schema_element => [
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["isDefault", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsDefault")], [0, 1]],
      ["itemId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "ItemId")], [0, 1]],
      ["overridePrice", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "OverridePrice")], [0, 1]],
      ["price", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "Price")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::ArrayOfItemIncludedModifier,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfItemIncludedModifier"),
    :schema_element => [
      ["itemIncludedModifier", ["Brink::Api::ItemIncludedModifier[]", XSD::QName.new(NsPosWebServiceData, "ItemIncludedModifier")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::ItemIncludedModifier,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ItemIncludedModifier"),
    :schema_element => [
      ["automaticallyAdd", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "AutomaticallyAdd")], [0, 1]],
      ["isIncluded", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsIncluded")], [0, 1]],
      ["itemId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "ItemId")], [0, 1]],
      ["modifierGroupId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "ModifierGroupId")], [0, 1]],
      ["position", ["SOAP::SOAPShort", XSD::QName.new(NsPosWebServiceData, "Position")], [0, 1]],
      ["printInKitchen", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "PrintInKitchen")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::ArrayOfJob,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfJob"),
    :schema_element => [
      ["job", ["Brink::Api::Job[]", XSD::QName.new(NsPosWebServiceData, "Job")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::Job,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "Job"),
    :schema_element => [
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::ArrayOfLoyaltyReward,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfLoyaltyReward"),
    :schema_element => [
      ["loyaltyReward", ["Brink::Api::LoyaltyReward[]", XSD::QName.new(NsPosWebServiceData, "LoyaltyReward")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::LoyaltyReward,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "LoyaltyReward"),
    :schema_basetype => XSD::QName.new(NsPosWebServiceData, "SettingsObject"),
    :schema_element => [
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["isDeleted", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsDeleted")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["isActive", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsActive")], [0, 1]],
      ["type", ["SOAP::SOAPUnsignedByte", XSD::QName.new(NsPosWebServiceData, "Type")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::DiscountReward,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "DiscountReward"),
    :schema_basetype => XSD::QName.new(NsPosWebServiceData, "LoyaltyReward"),
    :schema_element => [
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["isDeleted", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsDeleted")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["isActive", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsActive")], [0, 1]],
      ["type", ["SOAP::SOAPUnsignedByte", XSD::QName.new(NsPosWebServiceData, "Type")], [0, 1]],
      ["discountId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "DiscountId")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::GiftCardReward,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "GiftCardReward"),
    :schema_basetype => XSD::QName.new(NsPosWebServiceData, "LoyaltyReward"),
    :schema_element => [
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["isDeleted", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsDeleted")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["isActive", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsActive")], [0, 1]],
      ["type", ["SOAP::SOAPUnsignedByte", XSD::QName.new(NsPosWebServiceData, "Type")], [0, 1]],
      ["amount", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "Amount")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::PromotionReward,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "PromotionReward"),
    :schema_basetype => XSD::QName.new(NsPosWebServiceData, "LoyaltyReward"),
    :schema_element => [
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["isDeleted", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsDeleted")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["isActive", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsActive")], [0, 1]],
      ["type", ["SOAP::SOAPUnsignedByte", XSD::QName.new(NsPosWebServiceData, "Type")], [0, 1]],
      ["promotionId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "PromotionId")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::VoucherReward,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "VoucherReward"),
    :schema_basetype => XSD::QName.new(NsPosWebServiceData, "LoyaltyReward"),
    :schema_element => [
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["isDeleted", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsDeleted")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["isActive", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsActive")], [0, 1]],
      ["type", ["SOAP::SOAPUnsignedByte", XSD::QName.new(NsPosWebServiceData, "Type")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::ArrayOfModifierCode,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfModifierCode"),
    :schema_element => [
      ["modifierCode", ["Brink::Api::ModifierCode[]", XSD::QName.new(NsPosWebServiceData, "ModifierCode")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::ModifierCode,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ModifierCode"),
    :schema_basetype => XSD::QName.new(NsPosWebServiceData, "SettingsObject"),
    :schema_element => [
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["isDeleted", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsDeleted")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["abbreviation", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Abbreviation")], [0, 1]],
      ["active", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "Active")], [0, 1]],
      ["appliesTo", ["Brink::Api::ModCodeIngredientType", XSD::QName.new(NsPosWebServiceData, "AppliesTo")], [0, 1]],
      ["isSystem", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsSystem")], [0, 1]],
      ["type", ["Brink::Api::ModCodeType", XSD::QName.new(NsPosWebServiceData, "Type")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::ArrayOfModifierGroup,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfModifierGroup"),
    :schema_element => [
      ["modifierGroup", ["Brink::Api::ModifierGroup[]", XSD::QName.new(NsPosWebServiceData, "ModifierGroup")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::ModifierGroup,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ModifierGroup"),
    :schema_basetype => XSD::QName.new(NsPosWebServiceData, "SettingsObject"),
    :schema_element => [
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["isDeleted", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsDeleted")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Description")], [0, 1]],
      ["displayName", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "DisplayName")], [0, 1]],
      ["flowRequired", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "FlowRequired")], [0, 1]],
      ["free", ["SOAP::SOAPUnsignedByte", XSD::QName.new(NsPosWebServiceData, "Free")], [0, 1]],
      ["items", ["Brink::Api::ArrayOfModifierGroupItem", XSD::QName.new(NsPosWebServiceData, "Items")], [0, 1]],
      ["maximum", ["SOAP::SOAPUnsignedByte", XSD::QName.new(NsPosWebServiceData, "Maximum")], [0, 1]],
      ["minimum", ["SOAP::SOAPUnsignedByte", XSD::QName.new(NsPosWebServiceData, "Minimum")], [0, 1]],
      ["panelId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "PanelId")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::ArrayOfModifierGroupItem,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfModifierGroupItem"),
    :schema_element => [
      ["modifierGroupItem", ["Brink::Api::ModifierGroupItem[]", XSD::QName.new(NsPosWebServiceData, "ModifierGroupItem")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::ModifierGroupItem,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ModifierGroupItem"),
    :schema_element => [
      ["itemId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "ItemId")], [0, 1]],
      ["position", ["SOAP::SOAPShort", XSD::QName.new(NsPosWebServiceData, "Position")], [0, 1]],
      ["price", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "Price")], [0, 1]],
      ["priceMethod", ["SOAP::SOAPUnsignedByte", XSD::QName.new(NsPosWebServiceData, "PriceMethod")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::Options,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "Options"),
    :schema_element => [
      ["accounting", ["Brink::Api::AccountingOptions", XSD::QName.new(NsPosWebServiceData, "Accounting")], [0, 1]],
      ["location", ["Brink::Api::LocationOptions", XSD::QName.new(NsPosWebServiceData, "Location")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::AccountingOptions,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "AccountingOptions"),
    :schema_element => [
      ["gLExport", ["Brink::Api::GLExport", XSD::QName.new(NsPosWebServiceData, "GLExport")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::GLExport,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "GLExport"),
    :schema_element => [
      ["discounts", ["Brink::Api::ArrayOfGLExportDiscountAccount", XSD::QName.new(NsPosWebServiceData, "Discounts")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["others", ["Brink::Api::ArrayOfGLExportOtherAccount", XSD::QName.new(NsPosWebServiceData, "Others")], [0, 1]],
      ["pettyAccounts", ["Brink::Api::ArrayOfGLExportPettyAccount", XSD::QName.new(NsPosWebServiceData, "PettyAccounts")], [0, 1]],
      ["promotions", ["Brink::Api::ArrayOfGLExportPromotionAccount", XSD::QName.new(NsPosWebServiceData, "Promotions")], [0, 1]],
      ["revenueCenters", ["Brink::Api::ArrayOfGLExportRevenueCenterAccount", XSD::QName.new(NsPosWebServiceData, "RevenueCenters")], [0, 1]],
      ["surcharges", ["Brink::Api::ArrayOfGLExportSurchargeAccount", XSD::QName.new(NsPosWebServiceData, "Surcharges")], [0, 1]],
      ["taxes", ["Brink::Api::ArrayOfGLExportTaxAccount", XSD::QName.new(NsPosWebServiceData, "Taxes")], [0, 1]],
      ["tenders", ["Brink::Api::ArrayOfGLExportTenderAccount", XSD::QName.new(NsPosWebServiceData, "Tenders")], [0, 1]],
      ["tendersForEcommerce", ["Brink::Api::ArrayOfGLExportTenderAccount", XSD::QName.new(NsPosWebServiceData, "TendersForEcommerce")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::ArrayOfGLExportDiscountAccount,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfGLExportDiscountAccount"),
    :schema_element => [
      ["gLExportDiscountAccount", ["Brink::Api::GLExportDiscountAccount[]", XSD::QName.new(NsPosWebServiceData, "GLExportDiscountAccount")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::GLExportDiscountAccount,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "GLExportDiscountAccount"),
    :schema_basetype => XSD::QName.new(NsPosWebServiceData, "GLExportAccount"),
    :schema_element => [
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Class")], [0, 1]],
      ["creditAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "CreditAccount")], [0, 1]],
      ["debitAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "DebitAccount")], [0, 1]],
      ["memo", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Memo")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["discountId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "DiscountId")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::GLExportAccount,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "GLExportAccount"),
    :schema_element => [
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Class")], [0, 1]],
      ["creditAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "CreditAccount")], [0, 1]],
      ["debitAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "DebitAccount")], [0, 1]],
      ["memo", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Memo")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::ArrayOfGLExportOtherAccount,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfGLExportOtherAccount"),
    :schema_element => [
      ["gLExportOtherAccount", ["Brink::Api::GLExportOtherAccount[]", XSD::QName.new(NsPosWebServiceData, "GLExportOtherAccount")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::GLExportOtherAccount,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "GLExportOtherAccount"),
    :schema_basetype => XSD::QName.new(NsPosWebServiceData, "GLExportAccount"),
    :schema_element => [
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Class")], [0, 1]],
      ["creditAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "CreditAccount")], [0, 1]],
      ["debitAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "DebitAccount")], [0, 1]],
      ["memo", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Memo")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["type", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Type")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::ArrayOfGLExportPettyAccount,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfGLExportPettyAccount"),
    :schema_element => [
      ["gLExportPettyAccount", ["Brink::Api::GLExportPettyAccount[]", XSD::QName.new(NsPosWebServiceData, "GLExportPettyAccount")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::GLExportPettyAccount,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "GLExportPettyAccount"),
    :schema_basetype => XSD::QName.new(NsPosWebServiceData, "GLExportAccount"),
    :schema_element => [
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Class")], [0, 1]],
      ["creditAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "CreditAccount")], [0, 1]],
      ["debitAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "DebitAccount")], [0, 1]],
      ["memo", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Memo")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["pettyAccountId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "PettyAccountId")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::ArrayOfGLExportPromotionAccount,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfGLExportPromotionAccount"),
    :schema_element => [
      ["gLExportPromotionAccount", ["Brink::Api::GLExportPromotionAccount[]", XSD::QName.new(NsPosWebServiceData, "GLExportPromotionAccount")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::GLExportPromotionAccount,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "GLExportPromotionAccount"),
    :schema_basetype => XSD::QName.new(NsPosWebServiceData, "GLExportAccount"),
    :schema_element => [
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Class")], [0, 1]],
      ["creditAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "CreditAccount")], [0, 1]],
      ["debitAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "DebitAccount")], [0, 1]],
      ["memo", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Memo")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["promotionId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "PromotionId")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::ArrayOfGLExportRevenueCenterAccount,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfGLExportRevenueCenterAccount"),
    :schema_element => [
      ["gLExportRevenueCenterAccount", ["Brink::Api::GLExportRevenueCenterAccount[]", XSD::QName.new(NsPosWebServiceData, "GLExportRevenueCenterAccount")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::GLExportRevenueCenterAccount,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "GLExportRevenueCenterAccount"),
    :schema_basetype => XSD::QName.new(NsPosWebServiceData, "GLExportAccount"),
    :schema_element => [
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Class")], [0, 1]],
      ["creditAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "CreditAccount")], [0, 1]],
      ["debitAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "DebitAccount")], [0, 1]],
      ["memo", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Memo")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["revenueCenterId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "RevenueCenterId")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::ArrayOfGLExportSurchargeAccount,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfGLExportSurchargeAccount"),
    :schema_element => [
      ["gLExportSurchargeAccount", ["Brink::Api::GLExportSurchargeAccount[]", XSD::QName.new(NsPosWebServiceData, "GLExportSurchargeAccount")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::GLExportSurchargeAccount,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "GLExportSurchargeAccount"),
    :schema_basetype => XSD::QName.new(NsPosWebServiceData, "GLExportAccount"),
    :schema_element => [
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Class")], [0, 1]],
      ["creditAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "CreditAccount")], [0, 1]],
      ["debitAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "DebitAccount")], [0, 1]],
      ["memo", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Memo")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["surchargeId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "SurchargeId")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::ArrayOfGLExportTaxAccount,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfGLExportTaxAccount"),
    :schema_element => [
      ["gLExportTaxAccount", ["Brink::Api::GLExportTaxAccount[]", XSD::QName.new(NsPosWebServiceData, "GLExportTaxAccount")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::GLExportTaxAccount,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "GLExportTaxAccount"),
    :schema_basetype => XSD::QName.new(NsPosWebServiceData, "GLExportAccount"),
    :schema_element => [
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Class")], [0, 1]],
      ["creditAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "CreditAccount")], [0, 1]],
      ["debitAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "DebitAccount")], [0, 1]],
      ["memo", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Memo")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["taxId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "TaxId")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::ArrayOfGLExportTenderAccount,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfGLExportTenderAccount"),
    :schema_element => [
      ["gLExportTenderAccount", ["Brink::Api::GLExportTenderAccount[]", XSD::QName.new(NsPosWebServiceData, "GLExportTenderAccount")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::GLExportTenderAccount,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "GLExportTenderAccount"),
    :schema_basetype => XSD::QName.new(NsPosWebServiceData, "GLExportAccount"),
    :schema_element => [
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Class")], [0, 1]],
      ["creditAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "CreditAccount")], [0, 1]],
      ["debitAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "DebitAccount")], [0, 1]],
      ["memo", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Memo")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["tenderId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "TenderId")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::LocationOptions,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "LocationOptions"),
    :schema_element => [
      ["address1", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Address1")], [0, 1]],
      ["address2", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Address2")], [0, 1]],
      ["city", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "City")], [0, 1]],
      ["country", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Country")], [0, 1]],
      ["fax", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Fax")], [0, 1]],
      ["latitude", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "Latitude")], [0, 1]],
      ["longitude", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "Longitude")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["phone", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Phone")], [0, 1]],
      ["state", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "State")], [0, 1]],
      ["timeZone", ["Brink::Api::TimeZone", XSD::QName.new(NsPosWebServiceData, "TimeZone")], [0, 1]],
      ["zip", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Zip")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::ArrayOfPettyAccount,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfPettyAccount"),
    :schema_element => [
      ["pettyAccount", ["Brink::Api::PettyAccount[]", XSD::QName.new(NsPosWebServiceData, "PettyAccount")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::PettyAccount,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "PettyAccount"),
    :schema_element => [
      ["accountType", ["Brink::Api::PettyAccountType", XSD::QName.new(NsPosWebServiceData, "AccountType")], [0, 1]],
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::ArrayOfPromotion,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfPromotion"),
    :schema_element => [
      ["promotion", ["Brink::Api::Promotion[]", XSD::QName.new(NsPosWebServiceData, "Promotion")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::Promotion,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "Promotion"),
    :schema_element => [
      ["active", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "Active")], [0, 1]],
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["type", ["Brink::Api::PromotionType", XSD::QName.new(NsPosWebServiceData, "Type")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::ArrayOfRegister,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfRegister"),
    :schema_element => [
      ["register", ["Brink::Api::Register[]", XSD::QName.new(NsPosWebServiceData, "Register")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::Register,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "Register"),
    :schema_element => [
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["number", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Number")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::ArrayOfRevenueCenter,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfRevenueCenter"),
    :schema_element => [
      ["revenueCenter", ["Brink::Api::RevenueCenter[]", XSD::QName.new(NsPosWebServiceData, "RevenueCenter")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::RevenueCenter,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "RevenueCenter"),
    :schema_element => [
      ["active", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "Active")], [0, 1]],
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["taxIds", ["Brink::Api::ArrayOfint", XSD::QName.new(NsPosWebServiceData, "TaxIds")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::ArrayOfSection,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfSection"),
    :schema_element => [
      ["section", ["Brink::Api::Section[]", XSD::QName.new(NsPosWebServiceData, "Section")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::Section,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "Section"),
    :schema_element => [
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::ArrayOfSurcharge,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfSurcharge"),
    :schema_element => [
      ["surcharge", ["Brink::Api::Surcharge[]", XSD::QName.new(NsPosWebServiceData, "Surcharge")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::Surcharge,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "Surcharge"),
    :schema_element => [
      ["amount", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "Amount")], [0, 1]],
      ["automaticallyApply", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "AutomaticallyApply")], [0, 1]],
      ["days", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Days")], [0, 1]],
      ["endDate", ["SOAP::SOAPDateTime", XSD::QName.new(NsPosWebServiceData, "EndDate")], [0, 1]],
      ["endTime", ["SOAP::SOAPDateTime", XSD::QName.new(NsPosWebServiceData, "EndTime")], [0, 1]],
      ["enforceDateRanges", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "EnforceDateRanges")], [0, 1]],
      ["enforceDays", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "EnforceDays")], [0, 1]],
      ["enforcePartySize", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "EnforcePartySize")], [0, 1]],
      ["enforceTimeRanges", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "EnforceTimeRanges")], [0, 1]],
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["limitDestinations", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "LimitDestinations")], [0, 1]],
      ["limitSections", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "LimitSections")], [0, 1]],
      ["maximumPartySize", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "MaximumPartySize")], [0, 1]],
      ["method", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Method")], [0, 1]],
      ["minimumPartySize", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "MinimumPartySize")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["prompt", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "Prompt")], [0, 1]],
      ["startDate", ["SOAP::SOAPDateTime", XSD::QName.new(NsPosWebServiceData, "StartDate")], [0, 1]],
      ["startTime", ["SOAP::SOAPDateTime", XSD::QName.new(NsPosWebServiceData, "StartTime")], [0, 1]],
      ["taxIds", ["Brink::Api::ArrayOfint", XSD::QName.new(NsPosWebServiceData, "TaxIds")], [0, 1]],
      ["terminalTypes", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "TerminalTypes")], [0, 1]],
      ["type", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Type")], [0, 1]],
      ["validDestinationIds", ["Brink::Api::ArrayOfint", XSD::QName.new(NsPosWebServiceData, "ValidDestinationIds")], [0, 1]],
      ["validSectionIds", ["Brink::Api::ArrayOfint", XSD::QName.new(NsPosWebServiceData, "ValidSectionIds")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::ArrayOfTax,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfTax"),
    :schema_element => [
      ["tax", ["Brink::Api::Tax[]", XSD::QName.new(NsPosWebServiceData, "Tax")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::Tax,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "Tax"),
    :schema_element => [
      ["amount", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "Amount")], [0, 1]],
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["type", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Type")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::ArrayOfTender,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfTender"),
    :schema_element => [
      ["tender", ["Brink::Api::Tender[]", XSD::QName.new(NsPosWebServiceData, "Tender")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::Tender,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "Tender"),
    :schema_element => [
      ["active", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "Active")], [0, 1]],
      ["allowChange", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "AllowChange")], [0, 1]],
      ["allowTips", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "AllowTips")], [0, 1]],
      ["cardType", ["Brink::Api::CardType", XSD::QName.new(NsPosWebServiceData, "CardType")], [0, 1]],
      ["defaultAmount", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "DefaultAmount")], [0, 1]],
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["maxTipPercent", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "MaxTipPercent")], [0, 1]],
      ["maximumAccountDigits", ["SOAP::SOAPByte", XSD::QName.new(NsPosWebServiceData, "MaximumAccountDigits")], [0, 1]],
      ["minimumAccountDigits", ["SOAP::SOAPByte", XSD::QName.new(NsPosWebServiceData, "MinimumAccountDigits")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["openDrawer", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "OpenDrawer")], [0, 1]],
      ["reconciliationMethod", ["Brink::Api::ReconciliationMethod", XSD::QName.new(NsPosWebServiceData, "ReconciliationMethod")], [0, 1]],
      ["requiresAuthorization", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "RequiresAuthorization")], [0, 1]],
      ["signatureCapture", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "SignatureCapture")], [0, 1]],
      ["tenderType", ["Brink::Api::TenderType", XSD::QName.new(NsPosWebServiceData, "TenderType")], [0, 1]],
      ["varianceAmount", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "VarianceAmount")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::ArrayOfVoidReason,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfVoidReason"),
    :schema_element => [
      ["voidReason", ["Brink::Api::VoidReason[]", XSD::QName.new(NsPosWebServiceData, "VoidReason")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::VoidReason,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "VoidReason"),
    :schema_element => [
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::ArrayOfint,
    :schema_type => XSD::QName.new(NsArrays, "ArrayOfint"),
    :schema_element => [
      ["int", "SOAP::SOAPInt[]", [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::ArrayOfBrandAllocation,
    :schema_type => XSD::QName.new(NsPos, "ArrayOfBrandAllocation"),
    :schema_element => [
      ["brandAllocation", ["Brink::Api::BrandAllocation[]", XSD::QName.new(NsPos, "BrandAllocation")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::BrandAllocation,
    :schema_type => XSD::QName.new(NsPos, "BrandAllocation"),
    :schema_element => [
      ["brandId", ["SOAP::SOAPInt", XSD::QName.new(NsPos, "BrandId")], [0, 1]],
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPos, "Id")], [0, 1]],
      ["weight", ["SOAP::SOAPDecimal", XSD::QName.new(NsPos, "Weight")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::DateRange,
    :schema_type => XSD::QName.new(NsBrinkFoundation, "DateRange"),
    :schema_element => [
      ["v_end", ["SOAP::SOAPDateTime", XSD::QName.new(NsBrinkFoundation, "End")], [0, 1]],
      ["start", ["SOAP::SOAPDateTime", XSD::QName.new(NsBrinkFoundation, "Start")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::AccessFault,
    :schema_type => XSD::QName.new(NsPosWebServiceFaults, "AccessFault"),
    :schema_element => [
      ["code", ["Brink::Api::AccessErrorCode", XSD::QName.new(NsPosWebServiceFaults, "Code")], [0, 1]],
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceFaults, "Message")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::LocationFault,
    :schema_type => XSD::QName.new(NsPosWebServiceFaults, "LocationFault"),
    :schema_element => [
      ["code", ["Brink::Api::LocationErrorCode", XSD::QName.new(NsPosWebServiceFaults, "Code")], [0, 1]],
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceFaults, "Message")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Brink::Api::TimeZone,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "TimeZone")
  )

  EncodedRegistry.register(
    :class => Brink::Api::DiscountGranularity,
    :schema_type => XSD::QName.new(NsPos, "DiscountGranularity")
  )

  EncodedRegistry.register(
    :class => Brink::Api::DiscountType,
    :schema_type => XSD::QName.new(NsPos, "DiscountType")
  )

  EncodedRegistry.register(
    :class => Brink::Api::MaritalStatus,
    :schema_type => XSD::QName.new(NsPos, "MaritalStatus")
  )

  EncodedRegistry.register(
    :class => Brink::Api::GiftCardItemType,
    :schema_type => XSD::QName.new(NsPos, "GiftCardItemType")
  )

  EncodedRegistry.register(
    :class => Brink::Api::ItemType,
    :schema_type => XSD::QName.new(NsPos, "ItemType")
  )

  EncodedRegistry.register(
    :class => Brink::Api::PricePer,
    :schema_type => XSD::QName.new(NsPos, "PricePer")
  )

  EncodedRegistry.register(
    :class => Brink::Api::ModCodeIngredientType,
    :schema_type => XSD::QName.new(NsPos, "ModCodeIngredientType")
  )

  EncodedRegistry.register(
    :class => Brink::Api::ModCodeType,
    :schema_type => XSD::QName.new(NsPos, "ModCodeType")
  )

  EncodedRegistry.register(
    :class => Brink::Api::PettyAccountType,
    :schema_type => XSD::QName.new(NsPos, "PettyAccountType")
  )

  EncodedRegistry.register(
    :class => Brink::Api::PromotionType,
    :schema_type => XSD::QName.new(NsPos, "PromotionType")
  )

  EncodedRegistry.register(
    :class => Brink::Api::ReconciliationMethod,
    :schema_type => XSD::QName.new(NsPos, "ReconciliationMethod")
  )

  EncodedRegistry.register(
    :class => Brink::Api::TenderType,
    :schema_type => XSD::QName.new(NsPos, "TenderType")
  )

  EncodedRegistry.register(
    :class => Brink::Api::CardType,
    :schema_type => XSD::QName.new(NsBrinkCredit, "CardType")
  )

  EncodedRegistry.register(
    :class => Brink::Api::AccessErrorCode,
    :schema_type => XSD::QName.new(NsPosWebServiceFaults, "AccessErrorCode")
  )

  EncodedRegistry.register(
    :class => Brink::Api::LocationErrorCode,
    :schema_type => XSD::QName.new(NsPosWebServiceFaults, "LocationErrorCode")
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfCashDrawer,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfCashDrawer"),
    :schema_element => [
      ["cashDrawer", ["Brink::Api::CashDrawer[]", XSD::QName.new(NsPosWebServiceData, "CashDrawer")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::CashDrawer,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "CashDrawer"),
    :schema_element => [
      ["defaultBank", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "DefaultBank")], [0, 1]],
      ["drawerNumber", ["SOAP::SOAPUnsignedByte", XSD::QName.new(NsPosWebServiceData, "DrawerNumber")], [0, 1]],
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["isCompulsory", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsCompulsory")], [0, 1]],
      ["isPublic", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsPublic")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["terminalId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "TerminalId")], [0, 1]],
      ["type", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Type")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfDayPart,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfDayPart"),
    :schema_element => [
      ["dayPart", ["Brink::Api::DayPart[]", XSD::QName.new(NsPosWebServiceData, "DayPart")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::DayPart,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "DayPart"),
    :schema_element => [
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["startTime", ["SOAP::SOAPDateTime", XSD::QName.new(NsPosWebServiceData, "StartTime")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfDestination,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfDestination"),
    :schema_element => [
      ["destination", ["Brink::Api::Destination[]", XSD::QName.new(NsPosWebServiceData, "Destination")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::Destination,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "Destination"),
    :schema_element => [
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Description")], [0, 1]],
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["kitchenDescription", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "KitchenDescription")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfDiscount,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfDiscount"),
    :schema_element => [
      ["discount", ["Brink::Api::Discount[]", XSD::QName.new(NsPosWebServiceData, "Discount")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::Discount,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "Discount"),
    :schema_element => [
      ["active", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "Active")], [0, 1]],
      ["allowLaterDiscounts", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "AllowLaterDiscounts")], [0, 1]],
      ["allowPriorDiscounts", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "AllowPriorDiscounts")], [0, 1]],
      ["amount", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "Amount")], [0, 1]],
      ["discountedItemsEligible", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "DiscountedItemsEligible")], [0, 1]],
      ["eligibleItemGroupIds", ["Brink::Api::ArrayOfint", XSD::QName.new(NsPosWebServiceData, "EligibleItemGroupIds")], [0, 1]],
      ["eligibleItemId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "EligibleItemId")], [0, 1]],
      ["endDate", ["SOAP::SOAPDateTime", XSD::QName.new(NsPosWebServiceData, "EndDate")], [0, 1]],
      ["endTime", ["SOAP::SOAPDateTime", XSD::QName.new(NsPosWebServiceData, "EndTime")], [0, 1]],
      ["enforceMaximumAmount", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "EnforceMaximumAmount")], [0, 1]],
      ["enforceMaximumItems", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "EnforceMaximumItems")], [0, 1]],
      ["enforceMaximumPerOrder", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "EnforceMaximumPerOrder")], [0, 1]],
      ["excludeItemsFromProductMix", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "ExcludeItemsFromProductMix")], [0, 1]],
      ["friday", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "Friday")], [0, 1]],
      ["granularity", ["Brink::Api::DiscountGranularity", XSD::QName.new(NsPosWebServiceData, "Granularity")], [0, 1]],
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["isEmployeeDiscount", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsEmployeeDiscount")], [0, 1]],
      ["isLoyaltyDiscount", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsLoyaltyDiscount")], [0, 1]],
      ["managerNeeded", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "ManagerNeeded")], [0, 1]],
      ["maximumAmount", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "MaximumAmount")], [0, 1]],
      ["maximumItems", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "MaximumItems")], [0, 1]],
      ["maximumPerOrder", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "MaximumPerOrder")], [0, 1]],
      ["monday", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "Monday")], [0, 1]],
      ["mustEnterAmount", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "MustEnterAmount")], [0, 1]],
      ["mustEnterName", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "MustEnterName")], [0, 1]],
      ["mustEnterPercent", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "MustEnterPercent")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["openDrawer", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "OpenDrawer")], [0, 1]],
      ["printOrder", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "PrintOrder")], [0, 1]],
      ["printedName", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "PrintedName")], [0, 1]],
      ["rate", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "Rate")], [0, 1]],
      ["saturday", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "Saturday")], [0, 1]],
      ["startDate", ["SOAP::SOAPDateTime", XSD::QName.new(NsPosWebServiceData, "StartDate")], [0, 1]],
      ["startTime", ["SOAP::SOAPDateTime", XSD::QName.new(NsPosWebServiceData, "StartTime")], [0, 1]],
      ["sunday", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "Sunday")], [0, 1]],
      ["thursday", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "Thursday")], [0, 1]],
      ["tuesday", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "Tuesday")], [0, 1]],
      ["type", ["Brink::Api::DiscountType", XSD::QName.new(NsPosWebServiceData, "Type")], [0, 1]],
      ["useDateRangeFilter", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "UseDateRangeFilter")], [0, 1]],
      ["useDayFilter", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "UseDayFilter")], [0, 1]],
      ["useItemFilter", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "UseItemFilter")], [0, 1]],
      ["useItemGroupFilter", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "UseItemGroupFilter")], [0, 1]],
      ["useTimeRangeFilter", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "UseTimeRangeFilter")], [0, 1]],
      ["wednesday", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "Wednesday")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfEmployee,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfEmployee"),
    :schema_element => [
      ["employee", ["Brink::Api::Employee[]", XSD::QName.new(NsPosWebServiceData, "Employee")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::Employee,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "Employee"),
    :schema_element => [
      ["address1", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Address1")], [0, 1]],
      ["address2", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Address2")], [0, 1]],
      ["birthDate", ["SOAP::SOAPDateTime", XSD::QName.new(NsPosWebServiceData, "BirthDate")], [0, 1]],
      ["cellPhone", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "CellPhone")], [0, 1]],
      ["city", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "City")], [0, 1]],
      ["emailAddress", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "EmailAddress")], [0, 1]],
      ["firstName", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "FirstName")], [0, 1]],
      ["hireDate", ["SOAP::SOAPDateTime", XSD::QName.new(NsPosWebServiceData, "HireDate")], [0, 1]],
      ["homePhone", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "HomePhone")], [0, 1]],
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["identificationVerified", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IdentificationVerified")], [0, 1]],
      ["jobs", ["Brink::Api::EmployeeJobs", XSD::QName.new(NsPosWebServiceData, "Jobs")], [0, 1]],
      ["lastName", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "LastName")], [0, 1]],
      ["maritalStatus", ["Brink::Api::MaritalStatus", XSD::QName.new(NsPosWebServiceData, "MaritalStatus")], [0, 1]],
      ["middleName", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "MiddleName")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["notes", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Notes")], [0, 1]],
      ["payrollId", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "PayrollId")], [0, 1]],
      ["sSN", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "SSN")], [0, 1]],
      ["state", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "State")], [0, 1]],
      ["taxWithholdingAllowance", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "TaxWithholdingAllowance")], [0, 1]],
      ["terminated", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "Terminated")], [0, 1]],
      ["terminationDate", ["SOAP::SOAPDateTime", XSD::QName.new(NsPosWebServiceData, "TerminationDate")], [0, 1]],
      ["zip", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Zip")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::EmployeeJobs,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "EmployeeJobs"),
    :schema_element => [
      ["employeeJob", ["Brink::Api::EmployeeJob[]", XSD::QName.new(NsPosWebServiceData, "EmployeeJob")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::EmployeeJob,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "EmployeeJob"),
    :schema_element => [
      ["jobId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "JobId")], [0, 1]],
      ["payRate", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "PayRate")], [0, 1]],
      ["securityLevelId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "SecurityLevelId")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfItemGroup,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfItemGroup"),
    :schema_element => [
      ["itemGroup", ["Brink::Api::ItemGroup[]", XSD::QName.new(NsPosWebServiceData, "ItemGroup")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ItemGroup,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ItemGroup"),
    :schema_basetype => XSD::QName.new(NsPosWebServiceData, "SettingsObject"),
    :schema_element => [
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["isDeleted", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsDeleted")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["alternateId", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "AlternateId")], [0, 1]],
      ["items", ["Brink::Api::ArrayOfItemGroupItem", XSD::QName.new(NsPosWebServiceData, "Items")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::SettingsObject,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "SettingsObject"),
    :schema_element => [
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["isDeleted", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsDeleted")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfItemGroupItem,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfItemGroupItem"),
    :schema_element => [
      ["itemGroupItem", ["Brink::Api::ItemGroupItem[]", XSD::QName.new(NsPosWebServiceData, "ItemGroupItem")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ItemGroupItem,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ItemGroupItem"),
    :schema_element => [
      ["itemId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "ItemId")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfItem,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfItem"),
    :schema_element => [
      ["item", ["Brink::Api::Item[]", XSD::QName.new(NsPosWebServiceData, "Item")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::Item,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "Item"),
    :schema_basetype => XSD::QName.new(NsPosWebServiceData, "SettingsObject"),
    :schema_element => [
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["isDeleted", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsDeleted")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["active", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "Active")], [0, 1]],
      ["askName", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "AskName")], [0, 1]],
      ["askPrice", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "AskPrice")], [0, 1]],
      ["availableFriday", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "AvailableFriday")], [0, 1]],
      ["availableMonday", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "AvailableMonday")], [0, 1]],
      ["availableSaturday", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "AvailableSaturday")], [0, 1]],
      ["availableSelectDates", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "AvailableSelectDates")], [0, 1]],
      ["availableSelectDays", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "AvailableSelectDays")], [0, 1]],
      ["availableSunday", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "AvailableSunday")], [0, 1]],
      ["availableThursday", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "AvailableThursday")], [0, 1]],
      ["availableTuesday", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "AvailableTuesday")], [0, 1]],
      ["availableWednesday", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "AvailableWednesday")], [0, 1]],
      ["brandAllocations", ["Brink::Api::ArrayOfBrandAllocation", XSD::QName.new(NsPosWebServiceData, "BrandAllocations")], [0, 1]],
      ["components", ["Brink::Api::ArrayOfItemCompositeComponent", XSD::QName.new(NsPosWebServiceData, "Components")], [0, 1]],
      ["cost", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "Cost")], [0, 1]],
      ["createdTime", ["SOAP::SOAPDateTime", XSD::QName.new(NsPosWebServiceData, "CreatedTime")], [0, 1]],
      ["datesAvailable", ["Brink::Api::DateRange", XSD::QName.new(NsPosWebServiceData, "DatesAvailable")], [0, 1]],
      ["giftCardItemType", ["Brink::Api::GiftCardItemType", XSD::QName.new(NsPosWebServiceData, "GiftCardItemType")], [0, 1]],
      ["includedModifiers", ["Brink::Api::ArrayOfItemIncludedModifier", XSD::QName.new(NsPosWebServiceData, "IncludedModifiers")], [0, 1]],
      ["ingredientItemIds", ["Brink::Api::ArrayOfint", XSD::QName.new(NsPosWebServiceData, "IngredientItemIds")], [0, 1]],
      ["isCombo", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsCombo")], [0, 1]],
      ["isGiftCard", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsGiftCard")], [0, 1]],
      ["isQuantityCounted", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsQuantityCounted")], [0, 1]],
      ["itemType", ["Brink::Api::ItemType", XSD::QName.new(NsPosWebServiceData, "ItemType")], [0, 1]],
      ["kitchenName", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "KitchenName")], [0, 1]],
      ["lastEditedTime", ["SOAP::SOAPDateTime", XSD::QName.new(NsPosWebServiceData, "LastEditedTime")], [0, 1]],
      ["modifierGroupIds", ["Brink::Api::ArrayOfint", XSD::QName.new(NsPosWebServiceData, "ModifierGroupIds")], [0, 1]],
      ["modifierTierId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "ModifierTierId")], [0, 1]],
      ["modifierWeight", ["SOAP::SOAPUnsignedByte", XSD::QName.new(NsPosWebServiceData, "ModifierWeight")], [0, 1]],
      ["nonRevenueItem", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "NonRevenueItem")], [0, 1]],
      ["pLU", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "PLU")], [0, 1]],
      ["price", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "Price")], [0, 1]],
      ["priceLevel", ["SOAP::SOAPUnsignedByte", XSD::QName.new(NsPosWebServiceData, "PriceLevel")], [0, 1]],
      ["pricePer", ["Brink::Api::PricePer", XSD::QName.new(NsPosWebServiceData, "PricePer")], [0, 1]],
      ["printerGroupId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "PrinterGroupId")], [0, 1]],
      ["revenueCenterId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "RevenueCenterId")], [0, 1]],
      ["sortPriority", ["SOAP::SOAPUnsignedByte", XSD::QName.new(NsPosWebServiceData, "SortPriority")], [0, 1]],
      ["tareId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "TareId")], [0, 1]],
      ["taxIds", ["Brink::Api::ArrayOfint", XSD::QName.new(NsPosWebServiceData, "TaxIds")], [0, 1]],
      ["unitName", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "UnitName")], [0, 1]],
      ["unitPrecision", ["SOAP::SOAPUnsignedByte", XSD::QName.new(NsPosWebServiceData, "UnitPrecision")], [0, 1]],
      ["videoGroupId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "VideoGroupId")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfItemCompositeComponent,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfItemCompositeComponent"),
    :schema_element => [
      ["itemCompositeComponent", ["Brink::Api::ItemCompositeComponent[]", XSD::QName.new(NsPosWebServiceData, "ItemCompositeComponent")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ItemCompositeComponent,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ItemCompositeComponent"),
    :schema_element => [
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["itemGroupId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "ItemGroupId")], [0, 1]],
      ["items", ["Brink::Api::ArrayOfItemCompositeComponentItem", XSD::QName.new(NsPosWebServiceData, "Items")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["overridePrice", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "OverridePrice")], [0, 1]],
      ["price", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "Price")], [0, 1]],
      ["rollupPrice", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "RollupPrice")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfItemCompositeComponentItem,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfItemCompositeComponentItem"),
    :schema_element => [
      ["itemCompositeComponentItem", ["Brink::Api::ItemCompositeComponentItem[]", XSD::QName.new(NsPosWebServiceData, "ItemCompositeComponentItem")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ItemCompositeComponentItem,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ItemCompositeComponentItem"),
    :schema_element => [
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["isDefault", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsDefault")], [0, 1]],
      ["itemId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "ItemId")], [0, 1]],
      ["overridePrice", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "OverridePrice")], [0, 1]],
      ["price", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "Price")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfItemIncludedModifier,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfItemIncludedModifier"),
    :schema_element => [
      ["itemIncludedModifier", ["Brink::Api::ItemIncludedModifier[]", XSD::QName.new(NsPosWebServiceData, "ItemIncludedModifier")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ItemIncludedModifier,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ItemIncludedModifier"),
    :schema_element => [
      ["automaticallyAdd", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "AutomaticallyAdd")], [0, 1]],
      ["isIncluded", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsIncluded")], [0, 1]],
      ["itemId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "ItemId")], [0, 1]],
      ["modifierGroupId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "ModifierGroupId")], [0, 1]],
      ["position", ["SOAP::SOAPShort", XSD::QName.new(NsPosWebServiceData, "Position")], [0, 1]],
      ["printInKitchen", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "PrintInKitchen")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfJob,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfJob"),
    :schema_element => [
      ["job", ["Brink::Api::Job[]", XSD::QName.new(NsPosWebServiceData, "Job")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::Job,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "Job"),
    :schema_element => [
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfLoyaltyReward,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfLoyaltyReward"),
    :schema_element => [
      ["loyaltyReward", ["Brink::Api::LoyaltyReward[]", XSD::QName.new(NsPosWebServiceData, "LoyaltyReward")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::LoyaltyReward,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "LoyaltyReward"),
    :schema_basetype => XSD::QName.new(NsPosWebServiceData, "SettingsObject"),
    :schema_element => [
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["isDeleted", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsDeleted")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["isActive", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsActive")], [0, 1]],
      ["type", ["SOAP::SOAPUnsignedByte", XSD::QName.new(NsPosWebServiceData, "Type")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::DiscountReward,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "DiscountReward"),
    :schema_basetype => XSD::QName.new(NsPosWebServiceData, "LoyaltyReward"),
    :schema_element => [
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["isDeleted", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsDeleted")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["isActive", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsActive")], [0, 1]],
      ["type", ["SOAP::SOAPUnsignedByte", XSD::QName.new(NsPosWebServiceData, "Type")], [0, 1]],
      ["discountId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "DiscountId")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GiftCardReward,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "GiftCardReward"),
    :schema_basetype => XSD::QName.new(NsPosWebServiceData, "LoyaltyReward"),
    :schema_element => [
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["isDeleted", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsDeleted")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["isActive", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsActive")], [0, 1]],
      ["type", ["SOAP::SOAPUnsignedByte", XSD::QName.new(NsPosWebServiceData, "Type")], [0, 1]],
      ["amount", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "Amount")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::PromotionReward,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "PromotionReward"),
    :schema_basetype => XSD::QName.new(NsPosWebServiceData, "LoyaltyReward"),
    :schema_element => [
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["isDeleted", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsDeleted")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["isActive", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsActive")], [0, 1]],
      ["type", ["SOAP::SOAPUnsignedByte", XSD::QName.new(NsPosWebServiceData, "Type")], [0, 1]],
      ["promotionId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "PromotionId")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::VoucherReward,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "VoucherReward"),
    :schema_basetype => XSD::QName.new(NsPosWebServiceData, "LoyaltyReward"),
    :schema_element => [
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["isDeleted", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsDeleted")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["isActive", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsActive")], [0, 1]],
      ["type", ["SOAP::SOAPUnsignedByte", XSD::QName.new(NsPosWebServiceData, "Type")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfModifierCode,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfModifierCode"),
    :schema_element => [
      ["modifierCode", ["Brink::Api::ModifierCode[]", XSD::QName.new(NsPosWebServiceData, "ModifierCode")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ModifierCode,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ModifierCode"),
    :schema_basetype => XSD::QName.new(NsPosWebServiceData, "SettingsObject"),
    :schema_element => [
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["isDeleted", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsDeleted")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["abbreviation", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Abbreviation")], [0, 1]],
      ["active", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "Active")], [0, 1]],
      ["appliesTo", ["Brink::Api::ModCodeIngredientType", XSD::QName.new(NsPosWebServiceData, "AppliesTo")], [0, 1]],
      ["isSystem", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsSystem")], [0, 1]],
      ["type", ["Brink::Api::ModCodeType", XSD::QName.new(NsPosWebServiceData, "Type")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfModifierGroup,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfModifierGroup"),
    :schema_element => [
      ["modifierGroup", ["Brink::Api::ModifierGroup[]", XSD::QName.new(NsPosWebServiceData, "ModifierGroup")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ModifierGroup,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ModifierGroup"),
    :schema_basetype => XSD::QName.new(NsPosWebServiceData, "SettingsObject"),
    :schema_element => [
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["isDeleted", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsDeleted")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Description")], [0, 1]],
      ["displayName", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "DisplayName")], [0, 1]],
      ["flowRequired", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "FlowRequired")], [0, 1]],
      ["free", ["SOAP::SOAPUnsignedByte", XSD::QName.new(NsPosWebServiceData, "Free")], [0, 1]],
      ["items", ["Brink::Api::ArrayOfModifierGroupItem", XSD::QName.new(NsPosWebServiceData, "Items")], [0, 1]],
      ["maximum", ["SOAP::SOAPUnsignedByte", XSD::QName.new(NsPosWebServiceData, "Maximum")], [0, 1]],
      ["minimum", ["SOAP::SOAPUnsignedByte", XSD::QName.new(NsPosWebServiceData, "Minimum")], [0, 1]],
      ["panelId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "PanelId")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfModifierGroupItem,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfModifierGroupItem"),
    :schema_element => [
      ["modifierGroupItem", ["Brink::Api::ModifierGroupItem[]", XSD::QName.new(NsPosWebServiceData, "ModifierGroupItem")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ModifierGroupItem,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ModifierGroupItem"),
    :schema_element => [
      ["itemId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "ItemId")], [0, 1]],
      ["position", ["SOAP::SOAPShort", XSD::QName.new(NsPosWebServiceData, "Position")], [0, 1]],
      ["price", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "Price")], [0, 1]],
      ["priceMethod", ["SOAP::SOAPUnsignedByte", XSD::QName.new(NsPosWebServiceData, "PriceMethod")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::Options,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "Options"),
    :schema_element => [
      ["accounting", ["Brink::Api::AccountingOptions", XSD::QName.new(NsPosWebServiceData, "Accounting")], [0, 1]],
      ["location", ["Brink::Api::LocationOptions", XSD::QName.new(NsPosWebServiceData, "Location")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::AccountingOptions,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "AccountingOptions"),
    :schema_element => [
      ["gLExport", ["Brink::Api::GLExport", XSD::QName.new(NsPosWebServiceData, "GLExport")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GLExport,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "GLExport"),
    :schema_element => [
      ["discounts", ["Brink::Api::ArrayOfGLExportDiscountAccount", XSD::QName.new(NsPosWebServiceData, "Discounts")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["others", ["Brink::Api::ArrayOfGLExportOtherAccount", XSD::QName.new(NsPosWebServiceData, "Others")], [0, 1]],
      ["pettyAccounts", ["Brink::Api::ArrayOfGLExportPettyAccount", XSD::QName.new(NsPosWebServiceData, "PettyAccounts")], [0, 1]],
      ["promotions", ["Brink::Api::ArrayOfGLExportPromotionAccount", XSD::QName.new(NsPosWebServiceData, "Promotions")], [0, 1]],
      ["revenueCenters", ["Brink::Api::ArrayOfGLExportRevenueCenterAccount", XSD::QName.new(NsPosWebServiceData, "RevenueCenters")], [0, 1]],
      ["surcharges", ["Brink::Api::ArrayOfGLExportSurchargeAccount", XSD::QName.new(NsPosWebServiceData, "Surcharges")], [0, 1]],
      ["taxes", ["Brink::Api::ArrayOfGLExportTaxAccount", XSD::QName.new(NsPosWebServiceData, "Taxes")], [0, 1]],
      ["tenders", ["Brink::Api::ArrayOfGLExportTenderAccount", XSD::QName.new(NsPosWebServiceData, "Tenders")], [0, 1]],
      ["tendersForEcommerce", ["Brink::Api::ArrayOfGLExportTenderAccount", XSD::QName.new(NsPosWebServiceData, "TendersForEcommerce")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfGLExportDiscountAccount,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfGLExportDiscountAccount"),
    :schema_element => [
      ["gLExportDiscountAccount", ["Brink::Api::GLExportDiscountAccount[]", XSD::QName.new(NsPosWebServiceData, "GLExportDiscountAccount")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GLExportDiscountAccount,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "GLExportDiscountAccount"),
    :schema_basetype => XSD::QName.new(NsPosWebServiceData, "GLExportAccount"),
    :schema_element => [
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Class")], [0, 1]],
      ["creditAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "CreditAccount")], [0, 1]],
      ["debitAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "DebitAccount")], [0, 1]],
      ["memo", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Memo")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["discountId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "DiscountId")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GLExportAccount,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "GLExportAccount"),
    :schema_element => [
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Class")], [0, 1]],
      ["creditAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "CreditAccount")], [0, 1]],
      ["debitAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "DebitAccount")], [0, 1]],
      ["memo", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Memo")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfGLExportOtherAccount,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfGLExportOtherAccount"),
    :schema_element => [
      ["gLExportOtherAccount", ["Brink::Api::GLExportOtherAccount[]", XSD::QName.new(NsPosWebServiceData, "GLExportOtherAccount")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GLExportOtherAccount,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "GLExportOtherAccount"),
    :schema_basetype => XSD::QName.new(NsPosWebServiceData, "GLExportAccount"),
    :schema_element => [
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Class")], [0, 1]],
      ["creditAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "CreditAccount")], [0, 1]],
      ["debitAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "DebitAccount")], [0, 1]],
      ["memo", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Memo")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["type", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Type")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfGLExportPettyAccount,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfGLExportPettyAccount"),
    :schema_element => [
      ["gLExportPettyAccount", ["Brink::Api::GLExportPettyAccount[]", XSD::QName.new(NsPosWebServiceData, "GLExportPettyAccount")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GLExportPettyAccount,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "GLExportPettyAccount"),
    :schema_basetype => XSD::QName.new(NsPosWebServiceData, "GLExportAccount"),
    :schema_element => [
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Class")], [0, 1]],
      ["creditAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "CreditAccount")], [0, 1]],
      ["debitAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "DebitAccount")], [0, 1]],
      ["memo", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Memo")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["pettyAccountId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "PettyAccountId")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfGLExportPromotionAccount,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfGLExportPromotionAccount"),
    :schema_element => [
      ["gLExportPromotionAccount", ["Brink::Api::GLExportPromotionAccount[]", XSD::QName.new(NsPosWebServiceData, "GLExportPromotionAccount")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GLExportPromotionAccount,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "GLExportPromotionAccount"),
    :schema_basetype => XSD::QName.new(NsPosWebServiceData, "GLExportAccount"),
    :schema_element => [
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Class")], [0, 1]],
      ["creditAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "CreditAccount")], [0, 1]],
      ["debitAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "DebitAccount")], [0, 1]],
      ["memo", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Memo")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["promotionId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "PromotionId")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfGLExportRevenueCenterAccount,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfGLExportRevenueCenterAccount"),
    :schema_element => [
      ["gLExportRevenueCenterAccount", ["Brink::Api::GLExportRevenueCenterAccount[]", XSD::QName.new(NsPosWebServiceData, "GLExportRevenueCenterAccount")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GLExportRevenueCenterAccount,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "GLExportRevenueCenterAccount"),
    :schema_basetype => XSD::QName.new(NsPosWebServiceData, "GLExportAccount"),
    :schema_element => [
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Class")], [0, 1]],
      ["creditAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "CreditAccount")], [0, 1]],
      ["debitAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "DebitAccount")], [0, 1]],
      ["memo", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Memo")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["revenueCenterId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "RevenueCenterId")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfGLExportSurchargeAccount,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfGLExportSurchargeAccount"),
    :schema_element => [
      ["gLExportSurchargeAccount", ["Brink::Api::GLExportSurchargeAccount[]", XSD::QName.new(NsPosWebServiceData, "GLExportSurchargeAccount")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GLExportSurchargeAccount,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "GLExportSurchargeAccount"),
    :schema_basetype => XSD::QName.new(NsPosWebServiceData, "GLExportAccount"),
    :schema_element => [
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Class")], [0, 1]],
      ["creditAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "CreditAccount")], [0, 1]],
      ["debitAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "DebitAccount")], [0, 1]],
      ["memo", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Memo")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["surchargeId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "SurchargeId")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfGLExportTaxAccount,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfGLExportTaxAccount"),
    :schema_element => [
      ["gLExportTaxAccount", ["Brink::Api::GLExportTaxAccount[]", XSD::QName.new(NsPosWebServiceData, "GLExportTaxAccount")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GLExportTaxAccount,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "GLExportTaxAccount"),
    :schema_basetype => XSD::QName.new(NsPosWebServiceData, "GLExportAccount"),
    :schema_element => [
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Class")], [0, 1]],
      ["creditAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "CreditAccount")], [0, 1]],
      ["debitAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "DebitAccount")], [0, 1]],
      ["memo", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Memo")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["taxId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "TaxId")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfGLExportTenderAccount,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfGLExportTenderAccount"),
    :schema_element => [
      ["gLExportTenderAccount", ["Brink::Api::GLExportTenderAccount[]", XSD::QName.new(NsPosWebServiceData, "GLExportTenderAccount")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GLExportTenderAccount,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "GLExportTenderAccount"),
    :schema_basetype => XSD::QName.new(NsPosWebServiceData, "GLExportAccount"),
    :schema_element => [
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Class")], [0, 1]],
      ["creditAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "CreditAccount")], [0, 1]],
      ["debitAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "DebitAccount")], [0, 1]],
      ["memo", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Memo")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["tenderId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "TenderId")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::LocationOptions,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "LocationOptions"),
    :schema_element => [
      ["address1", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Address1")], [0, 1]],
      ["address2", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Address2")], [0, 1]],
      ["city", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "City")], [0, 1]],
      ["country", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Country")], [0, 1]],
      ["fax", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Fax")], [0, 1]],
      ["latitude", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "Latitude")], [0, 1]],
      ["longitude", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "Longitude")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["phone", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Phone")], [0, 1]],
      ["state", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "State")], [0, 1]],
      ["timeZone", ["Brink::Api::TimeZone", XSD::QName.new(NsPosWebServiceData, "TimeZone")], [0, 1]],
      ["zip", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Zip")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfPettyAccount,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfPettyAccount"),
    :schema_element => [
      ["pettyAccount", ["Brink::Api::PettyAccount[]", XSD::QName.new(NsPosWebServiceData, "PettyAccount")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::PettyAccount,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "PettyAccount"),
    :schema_element => [
      ["accountType", ["Brink::Api::PettyAccountType", XSD::QName.new(NsPosWebServiceData, "AccountType")], [0, 1]],
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfPromotion,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfPromotion"),
    :schema_element => [
      ["promotion", ["Brink::Api::Promotion[]", XSD::QName.new(NsPosWebServiceData, "Promotion")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::Promotion,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "Promotion"),
    :schema_element => [
      ["active", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "Active")], [0, 1]],
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["type", ["Brink::Api::PromotionType", XSD::QName.new(NsPosWebServiceData, "Type")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfRegister,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfRegister"),
    :schema_element => [
      ["register", ["Brink::Api::Register[]", XSD::QName.new(NsPosWebServiceData, "Register")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::Register,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "Register"),
    :schema_element => [
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["number", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Number")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfRevenueCenter,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfRevenueCenter"),
    :schema_element => [
      ["revenueCenter", ["Brink::Api::RevenueCenter[]", XSD::QName.new(NsPosWebServiceData, "RevenueCenter")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::RevenueCenter,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "RevenueCenter"),
    :schema_element => [
      ["active", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "Active")], [0, 1]],
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["taxIds", ["Brink::Api::ArrayOfint", XSD::QName.new(NsPosWebServiceData, "TaxIds")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfSection,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfSection"),
    :schema_element => [
      ["section", ["Brink::Api::Section[]", XSD::QName.new(NsPosWebServiceData, "Section")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::Section,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "Section"),
    :schema_element => [
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfSurcharge,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfSurcharge"),
    :schema_element => [
      ["surcharge", ["Brink::Api::Surcharge[]", XSD::QName.new(NsPosWebServiceData, "Surcharge")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::Surcharge,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "Surcharge"),
    :schema_element => [
      ["amount", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "Amount")], [0, 1]],
      ["automaticallyApply", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "AutomaticallyApply")], [0, 1]],
      ["days", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Days")], [0, 1]],
      ["endDate", ["SOAP::SOAPDateTime", XSD::QName.new(NsPosWebServiceData, "EndDate")], [0, 1]],
      ["endTime", ["SOAP::SOAPDateTime", XSD::QName.new(NsPosWebServiceData, "EndTime")], [0, 1]],
      ["enforceDateRanges", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "EnforceDateRanges")], [0, 1]],
      ["enforceDays", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "EnforceDays")], [0, 1]],
      ["enforcePartySize", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "EnforcePartySize")], [0, 1]],
      ["enforceTimeRanges", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "EnforceTimeRanges")], [0, 1]],
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["limitDestinations", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "LimitDestinations")], [0, 1]],
      ["limitSections", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "LimitSections")], [0, 1]],
      ["maximumPartySize", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "MaximumPartySize")], [0, 1]],
      ["method", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Method")], [0, 1]],
      ["minimumPartySize", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "MinimumPartySize")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["prompt", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "Prompt")], [0, 1]],
      ["startDate", ["SOAP::SOAPDateTime", XSD::QName.new(NsPosWebServiceData, "StartDate")], [0, 1]],
      ["startTime", ["SOAP::SOAPDateTime", XSD::QName.new(NsPosWebServiceData, "StartTime")], [0, 1]],
      ["taxIds", ["Brink::Api::ArrayOfint", XSD::QName.new(NsPosWebServiceData, "TaxIds")], [0, 1]],
      ["terminalTypes", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "TerminalTypes")], [0, 1]],
      ["type", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Type")], [0, 1]],
      ["validDestinationIds", ["Brink::Api::ArrayOfint", XSD::QName.new(NsPosWebServiceData, "ValidDestinationIds")], [0, 1]],
      ["validSectionIds", ["Brink::Api::ArrayOfint", XSD::QName.new(NsPosWebServiceData, "ValidSectionIds")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfTax,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfTax"),
    :schema_element => [
      ["tax", ["Brink::Api::Tax[]", XSD::QName.new(NsPosWebServiceData, "Tax")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::Tax,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "Tax"),
    :schema_element => [
      ["amount", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "Amount")], [0, 1]],
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["type", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Type")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfTender,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfTender"),
    :schema_element => [
      ["tender", ["Brink::Api::Tender[]", XSD::QName.new(NsPosWebServiceData, "Tender")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::Tender,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "Tender"),
    :schema_element => [
      ["active", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "Active")], [0, 1]],
      ["allowChange", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "AllowChange")], [0, 1]],
      ["allowTips", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "AllowTips")], [0, 1]],
      ["cardType", ["Brink::Api::CardType", XSD::QName.new(NsPosWebServiceData, "CardType")], [0, 1]],
      ["defaultAmount", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "DefaultAmount")], [0, 1]],
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["maxTipPercent", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "MaxTipPercent")], [0, 1]],
      ["maximumAccountDigits", ["SOAP::SOAPByte", XSD::QName.new(NsPosWebServiceData, "MaximumAccountDigits")], [0, 1]],
      ["minimumAccountDigits", ["SOAP::SOAPByte", XSD::QName.new(NsPosWebServiceData, "MinimumAccountDigits")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["openDrawer", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "OpenDrawer")], [0, 1]],
      ["reconciliationMethod", ["Brink::Api::ReconciliationMethod", XSD::QName.new(NsPosWebServiceData, "ReconciliationMethod")], [0, 1]],
      ["requiresAuthorization", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "RequiresAuthorization")], [0, 1]],
      ["signatureCapture", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "SignatureCapture")], [0, 1]],
      ["tenderType", ["Brink::Api::TenderType", XSD::QName.new(NsPosWebServiceData, "TenderType")], [0, 1]],
      ["varianceAmount", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "VarianceAmount")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfVoidReason,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "ArrayOfVoidReason"),
    :schema_element => [
      ["voidReason", ["Brink::Api::VoidReason[]", XSD::QName.new(NsPosWebServiceData, "VoidReason")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::VoidReason,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "VoidReason"),
    :schema_element => [
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfint,
    :schema_type => XSD::QName.new(NsArrays, "ArrayOfint"),
    :schema_element => [
      ["int", "SOAP::SOAPInt[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfBrandAllocation,
    :schema_type => XSD::QName.new(NsPos, "ArrayOfBrandAllocation"),
    :schema_element => [
      ["brandAllocation", ["Brink::Api::BrandAllocation[]", XSD::QName.new(NsPos, "BrandAllocation")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::BrandAllocation,
    :schema_type => XSD::QName.new(NsPos, "BrandAllocation"),
    :schema_element => [
      ["brandId", ["SOAP::SOAPInt", XSD::QName.new(NsPos, "BrandId")], [0, 1]],
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPos, "Id")], [0, 1]],
      ["weight", ["SOAP::SOAPDecimal", XSD::QName.new(NsPos, "Weight")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::DateRange,
    :schema_type => XSD::QName.new(NsBrinkFoundation, "DateRange"),
    :schema_element => [
      ["v_end", ["SOAP::SOAPDateTime", XSD::QName.new(NsBrinkFoundation, "End")], [0, 1]],
      ["start", ["SOAP::SOAPDateTime", XSD::QName.new(NsBrinkFoundation, "Start")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::AccessFault,
    :schema_type => XSD::QName.new(NsPosWebServiceFaults, "AccessFault"),
    :schema_element => [
      ["code", ["Brink::Api::AccessErrorCode", XSD::QName.new(NsPosWebServiceFaults, "Code")], [0, 1]],
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceFaults, "Message")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::LocationFault,
    :schema_type => XSD::QName.new(NsPosWebServiceFaults, "LocationFault"),
    :schema_element => [
      ["code", ["Brink::Api::LocationErrorCode", XSD::QName.new(NsPosWebServiceFaults, "Code")], [0, 1]],
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceFaults, "Message")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::TimeZone,
    :schema_type => XSD::QName.new(NsPosWebServiceData, "TimeZone")
  )

  LiteralRegistry.register(
    :class => Brink::Api::DiscountGranularity,
    :schema_type => XSD::QName.new(NsPos, "DiscountGranularity")
  )

  LiteralRegistry.register(
    :class => Brink::Api::DiscountType,
    :schema_type => XSD::QName.new(NsPos, "DiscountType")
  )

  LiteralRegistry.register(
    :class => Brink::Api::MaritalStatus,
    :schema_type => XSD::QName.new(NsPos, "MaritalStatus")
  )

  LiteralRegistry.register(
    :class => Brink::Api::GiftCardItemType,
    :schema_type => XSD::QName.new(NsPos, "GiftCardItemType")
  )

  LiteralRegistry.register(
    :class => Brink::Api::ItemType,
    :schema_type => XSD::QName.new(NsPos, "ItemType")
  )

  LiteralRegistry.register(
    :class => Brink::Api::PricePer,
    :schema_type => XSD::QName.new(NsPos, "PricePer")
  )

  LiteralRegistry.register(
    :class => Brink::Api::ModCodeIngredientType,
    :schema_type => XSD::QName.new(NsPos, "ModCodeIngredientType")
  )

  LiteralRegistry.register(
    :class => Brink::Api::ModCodeType,
    :schema_type => XSD::QName.new(NsPos, "ModCodeType")
  )

  LiteralRegistry.register(
    :class => Brink::Api::PettyAccountType,
    :schema_type => XSD::QName.new(NsPos, "PettyAccountType")
  )

  LiteralRegistry.register(
    :class => Brink::Api::PromotionType,
    :schema_type => XSD::QName.new(NsPos, "PromotionType")
  )

  LiteralRegistry.register(
    :class => Brink::Api::ReconciliationMethod,
    :schema_type => XSD::QName.new(NsPos, "ReconciliationMethod")
  )

  LiteralRegistry.register(
    :class => Brink::Api::TenderType,
    :schema_type => XSD::QName.new(NsPos, "TenderType")
  )

  LiteralRegistry.register(
    :class => Brink::Api::CardType,
    :schema_type => XSD::QName.new(NsBrinkCredit, "CardType")
  )

  LiteralRegistry.register(
    :class => Brink::Api::AccessErrorCode,
    :schema_type => XSD::QName.new(NsPosWebServiceFaults, "AccessErrorCode")
  )

  LiteralRegistry.register(
    :class => Brink::Api::LocationErrorCode,
    :schema_type => XSD::QName.new(NsPosWebServiceFaults, "LocationErrorCode")
  )

  LiteralRegistry.register(
    :class => Brink::Api::GetCashDrawers,
    :schema_name => XSD::QName.new(NsTempuriOrg, "GetCashDrawers"),
    :schema_element => [
      ["accessToken", "SOAP::SOAPString", [0, 1]],
      ["locationToken", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GetCashDrawersResponse,
    :schema_name => XSD::QName.new(NsTempuriOrg, "GetCashDrawersResponse"),
    :schema_element => [
      ["getCashDrawersResult", ["Brink::Api::ArrayOfCashDrawer", XSD::QName.new(NsTempuriOrg, "GetCashDrawersResult")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GetDayParts,
    :schema_name => XSD::QName.new(NsTempuriOrg, "GetDayParts"),
    :schema_element => [
      ["accessToken", "SOAP::SOAPString", [0, 1]],
      ["locationToken", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GetDayPartsResponse,
    :schema_name => XSD::QName.new(NsTempuriOrg, "GetDayPartsResponse"),
    :schema_element => [
      ["getDayPartsResult", ["Brink::Api::ArrayOfDayPart", XSD::QName.new(NsTempuriOrg, "GetDayPartsResult")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GetDestinations,
    :schema_name => XSD::QName.new(NsTempuriOrg, "GetDestinations"),
    :schema_element => [
      ["accessToken", "SOAP::SOAPString", [0, 1]],
      ["locationToken", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GetDestinationsResponse,
    :schema_name => XSD::QName.new(NsTempuriOrg, "GetDestinationsResponse"),
    :schema_element => [
      ["getDestinationsResult", ["Brink::Api::ArrayOfDestination", XSD::QName.new(NsTempuriOrg, "GetDestinationsResult")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GetDiscounts,
    :schema_name => XSD::QName.new(NsTempuriOrg, "GetDiscounts"),
    :schema_element => [
      ["accessToken", "SOAP::SOAPString", [0, 1]],
      ["locationToken", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GetDiscountsResponse,
    :schema_name => XSD::QName.new(NsTempuriOrg, "GetDiscountsResponse"),
    :schema_element => [
      ["getDiscountsResult", ["Brink::Api::ArrayOfDiscount", XSD::QName.new(NsTempuriOrg, "GetDiscountsResult")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GetEmployees,
    :schema_name => XSD::QName.new(NsTempuriOrg, "GetEmployees"),
    :schema_element => [
      ["accessToken", "SOAP::SOAPString", [0, 1]],
      ["locationToken", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GetEmployeesResponse,
    :schema_name => XSD::QName.new(NsTempuriOrg, "GetEmployeesResponse"),
    :schema_element => [
      ["getEmployeesResult", ["Brink::Api::ArrayOfEmployee", XSD::QName.new(NsTempuriOrg, "GetEmployeesResult")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GetItemGroups,
    :schema_name => XSD::QName.new(NsTempuriOrg, "GetItemGroups"),
    :schema_element => [
      ["accessToken", "SOAP::SOAPString", [0, 1]],
      ["locationToken", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GetItemGroupsResponse,
    :schema_name => XSD::QName.new(NsTempuriOrg, "GetItemGroupsResponse"),
    :schema_element => [
      ["getItemGroupsResult", ["Brink::Api::ArrayOfItemGroup", XSD::QName.new(NsTempuriOrg, "GetItemGroupsResult")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GetItems,
    :schema_name => XSD::QName.new(NsTempuriOrg, "GetItems"),
    :schema_element => [
      ["accessToken", "SOAP::SOAPString", [0, 1]],
      ["locationToken", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GetItemsResponse,
    :schema_name => XSD::QName.new(NsTempuriOrg, "GetItemsResponse"),
    :schema_element => [
      ["getItemsResult", ["Brink::Api::ArrayOfItem", XSD::QName.new(NsTempuriOrg, "GetItemsResult")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GetJobs,
    :schema_name => XSD::QName.new(NsTempuriOrg, "GetJobs"),
    :schema_element => [
      ["accessToken", "SOAP::SOAPString", [0, 1]],
      ["locationToken", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GetJobsResponse,
    :schema_name => XSD::QName.new(NsTempuriOrg, "GetJobsResponse"),
    :schema_element => [
      ["getJobsResult", ["Brink::Api::ArrayOfJob", XSD::QName.new(NsTempuriOrg, "GetJobsResult")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GetLoyaltyRewards,
    :schema_name => XSD::QName.new(NsTempuriOrg, "GetLoyaltyRewards"),
    :schema_element => [
      ["accessToken", "SOAP::SOAPString", [0, 1]],
      ["locationToken", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GetLoyaltyRewardsResponse,
    :schema_name => XSD::QName.new(NsTempuriOrg, "GetLoyaltyRewardsResponse"),
    :schema_element => [
      ["getLoyaltyRewardsResult", ["Brink::Api::ArrayOfLoyaltyReward", XSD::QName.new(NsTempuriOrg, "GetLoyaltyRewardsResult")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GetModifierCodes,
    :schema_name => XSD::QName.new(NsTempuriOrg, "GetModifierCodes"),
    :schema_element => [
      ["accessToken", "SOAP::SOAPString", [0, 1]],
      ["locationToken", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GetModifierCodesResponse,
    :schema_name => XSD::QName.new(NsTempuriOrg, "GetModifierCodesResponse"),
    :schema_element => [
      ["getModifierCodesResult", ["Brink::Api::ArrayOfModifierCode", XSD::QName.new(NsTempuriOrg, "GetModifierCodesResult")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GetModifierGroups,
    :schema_name => XSD::QName.new(NsTempuriOrg, "GetModifierGroups"),
    :schema_element => [
      ["accessToken", "SOAP::SOAPString", [0, 1]],
      ["locationToken", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GetModifierGroupsResponse,
    :schema_name => XSD::QName.new(NsTempuriOrg, "GetModifierGroupsResponse"),
    :schema_element => [
      ["getModifierGroupsResult", ["Brink::Api::ArrayOfModifierGroup", XSD::QName.new(NsTempuriOrg, "GetModifierGroupsResult")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GetOptions,
    :schema_name => XSD::QName.new(NsTempuriOrg, "GetOptions"),
    :schema_element => [
      ["accessToken", "SOAP::SOAPString", [0, 1]],
      ["locationToken", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GetOptionsResponse,
    :schema_name => XSD::QName.new(NsTempuriOrg, "GetOptionsResponse"),
    :schema_element => [
      ["getOptionsResult", ["Brink::Api::Options", XSD::QName.new(NsTempuriOrg, "GetOptionsResult")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GetPettyAccounts,
    :schema_name => XSD::QName.new(NsTempuriOrg, "GetPettyAccounts"),
    :schema_element => [
      ["accessToken", "SOAP::SOAPString", [0, 1]],
      ["locationToken", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GetPettyAccountsResponse,
    :schema_name => XSD::QName.new(NsTempuriOrg, "GetPettyAccountsResponse"),
    :schema_element => [
      ["getPettyAccountsResult", ["Brink::Api::ArrayOfPettyAccount", XSD::QName.new(NsTempuriOrg, "GetPettyAccountsResult")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GetPromotions,
    :schema_name => XSD::QName.new(NsTempuriOrg, "GetPromotions"),
    :schema_element => [
      ["accessToken", "SOAP::SOAPString", [0, 1]],
      ["locationToken", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GetPromotionsResponse,
    :schema_name => XSD::QName.new(NsTempuriOrg, "GetPromotionsResponse"),
    :schema_element => [
      ["getPromotionsResult", ["Brink::Api::ArrayOfPromotion", XSD::QName.new(NsTempuriOrg, "GetPromotionsResult")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GetRegisters,
    :schema_name => XSD::QName.new(NsTempuriOrg, "GetRegisters"),
    :schema_element => [
      ["accessToken", "SOAP::SOAPString", [0, 1]],
      ["locationToken", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GetRegistersResponse,
    :schema_name => XSD::QName.new(NsTempuriOrg, "GetRegistersResponse"),
    :schema_element => [
      ["getRegistersResult", ["Brink::Api::ArrayOfRegister", XSD::QName.new(NsTempuriOrg, "GetRegistersResult")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GetRevenueCenters,
    :schema_name => XSD::QName.new(NsTempuriOrg, "GetRevenueCenters"),
    :schema_element => [
      ["accessToken", "SOAP::SOAPString", [0, 1]],
      ["locationToken", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GetRevenueCentersResponse,
    :schema_name => XSD::QName.new(NsTempuriOrg, "GetRevenueCentersResponse"),
    :schema_element => [
      ["getRevenueCentersResult", ["Brink::Api::ArrayOfRevenueCenter", XSD::QName.new(NsTempuriOrg, "GetRevenueCentersResult")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GetSections,
    :schema_name => XSD::QName.new(NsTempuriOrg, "GetSections"),
    :schema_element => [
      ["accessToken", "SOAP::SOAPString", [0, 1]],
      ["locationToken", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GetSectionsResponse,
    :schema_name => XSD::QName.new(NsTempuriOrg, "GetSectionsResponse"),
    :schema_element => [
      ["getSectionsResult", ["Brink::Api::ArrayOfSection", XSD::QName.new(NsTempuriOrg, "GetSectionsResult")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GetSurcharges,
    :schema_name => XSD::QName.new(NsTempuriOrg, "GetSurcharges"),
    :schema_element => [
      ["accessToken", "SOAP::SOAPString", [0, 1]],
      ["locationToken", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GetSurchargesResponse,
    :schema_name => XSD::QName.new(NsTempuriOrg, "GetSurchargesResponse"),
    :schema_element => [
      ["getSurchargesResult", ["Brink::Api::ArrayOfSurcharge", XSD::QName.new(NsTempuriOrg, "GetSurchargesResult")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GetTaxes,
    :schema_name => XSD::QName.new(NsTempuriOrg, "GetTaxes"),
    :schema_element => [
      ["accessToken", "SOAP::SOAPString", [0, 1]],
      ["locationToken", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GetTaxesResponse,
    :schema_name => XSD::QName.new(NsTempuriOrg, "GetTaxesResponse"),
    :schema_element => [
      ["getTaxesResult", ["Brink::Api::ArrayOfTax", XSD::QName.new(NsTempuriOrg, "GetTaxesResult")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GetTenders,
    :schema_name => XSD::QName.new(NsTempuriOrg, "GetTenders"),
    :schema_element => [
      ["accessToken", "SOAP::SOAPString", [0, 1]],
      ["locationToken", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GetTendersResponse,
    :schema_name => XSD::QName.new(NsTempuriOrg, "GetTendersResponse"),
    :schema_element => [
      ["getTendersResult", ["Brink::Api::ArrayOfTender", XSD::QName.new(NsTempuriOrg, "GetTendersResult")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GetVoidReasons,
    :schema_name => XSD::QName.new(NsTempuriOrg, "GetVoidReasons"),
    :schema_element => [
      ["accessToken", "SOAP::SOAPString", [0, 1]],
      ["locationToken", "SOAP::SOAPString", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GetVoidReasonsResponse,
    :schema_name => XSD::QName.new(NsTempuriOrg, "GetVoidReasonsResponse"),
    :schema_element => [
      ["getVoidReasonsResult", ["Brink::Api::ArrayOfVoidReason", XSD::QName.new(NsTempuriOrg, "GetVoidReasonsResult")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfCashDrawer,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "ArrayOfCashDrawer"),
    :schema_element => [
      ["cashDrawer", ["Brink::Api::CashDrawer[]", XSD::QName.new(NsPosWebServiceData, "CashDrawer")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::CashDrawer,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "CashDrawer"),
    :schema_element => [
      ["defaultBank", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "DefaultBank")], [0, 1]],
      ["drawerNumber", ["SOAP::SOAPUnsignedByte", XSD::QName.new(NsPosWebServiceData, "DrawerNumber")], [0, 1]],
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["isCompulsory", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsCompulsory")], [0, 1]],
      ["isPublic", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsPublic")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["terminalId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "TerminalId")], [0, 1]],
      ["type", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Type")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfDayPart,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "ArrayOfDayPart"),
    :schema_element => [
      ["dayPart", ["Brink::Api::DayPart[]", XSD::QName.new(NsPosWebServiceData, "DayPart")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::DayPart,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "DayPart"),
    :schema_element => [
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["startTime", ["SOAP::SOAPDateTime", XSD::QName.new(NsPosWebServiceData, "StartTime")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfDestination,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "ArrayOfDestination"),
    :schema_element => [
      ["destination", ["Brink::Api::Destination[]", XSD::QName.new(NsPosWebServiceData, "Destination")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::Destination,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "Destination"),
    :schema_element => [
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Description")], [0, 1]],
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["kitchenDescription", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "KitchenDescription")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfDiscount,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "ArrayOfDiscount"),
    :schema_element => [
      ["discount", ["Brink::Api::Discount[]", XSD::QName.new(NsPosWebServiceData, "Discount")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::Discount,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "Discount"),
    :schema_element => [
      ["active", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "Active")], [0, 1]],
      ["allowLaterDiscounts", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "AllowLaterDiscounts")], [0, 1]],
      ["allowPriorDiscounts", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "AllowPriorDiscounts")], [0, 1]],
      ["amount", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "Amount")], [0, 1]],
      ["discountedItemsEligible", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "DiscountedItemsEligible")], [0, 1]],
      ["eligibleItemGroupIds", ["Brink::Api::ArrayOfint", XSD::QName.new(NsPosWebServiceData, "EligibleItemGroupIds")], [0, 1]],
      ["eligibleItemId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "EligibleItemId")], [0, 1]],
      ["endDate", ["SOAP::SOAPDateTime", XSD::QName.new(NsPosWebServiceData, "EndDate")], [0, 1]],
      ["endTime", ["SOAP::SOAPDateTime", XSD::QName.new(NsPosWebServiceData, "EndTime")], [0, 1]],
      ["enforceMaximumAmount", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "EnforceMaximumAmount")], [0, 1]],
      ["enforceMaximumItems", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "EnforceMaximumItems")], [0, 1]],
      ["enforceMaximumPerOrder", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "EnforceMaximumPerOrder")], [0, 1]],
      ["excludeItemsFromProductMix", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "ExcludeItemsFromProductMix")], [0, 1]],
      ["friday", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "Friday")], [0, 1]],
      ["granularity", ["Brink::Api::DiscountGranularity", XSD::QName.new(NsPosWebServiceData, "Granularity")], [0, 1]],
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["isEmployeeDiscount", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsEmployeeDiscount")], [0, 1]],
      ["isLoyaltyDiscount", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsLoyaltyDiscount")], [0, 1]],
      ["managerNeeded", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "ManagerNeeded")], [0, 1]],
      ["maximumAmount", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "MaximumAmount")], [0, 1]],
      ["maximumItems", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "MaximumItems")], [0, 1]],
      ["maximumPerOrder", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "MaximumPerOrder")], [0, 1]],
      ["monday", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "Monday")], [0, 1]],
      ["mustEnterAmount", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "MustEnterAmount")], [0, 1]],
      ["mustEnterName", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "MustEnterName")], [0, 1]],
      ["mustEnterPercent", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "MustEnterPercent")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["openDrawer", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "OpenDrawer")], [0, 1]],
      ["printOrder", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "PrintOrder")], [0, 1]],
      ["printedName", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "PrintedName")], [0, 1]],
      ["rate", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "Rate")], [0, 1]],
      ["saturday", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "Saturday")], [0, 1]],
      ["startDate", ["SOAP::SOAPDateTime", XSD::QName.new(NsPosWebServiceData, "StartDate")], [0, 1]],
      ["startTime", ["SOAP::SOAPDateTime", XSD::QName.new(NsPosWebServiceData, "StartTime")], [0, 1]],
      ["sunday", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "Sunday")], [0, 1]],
      ["thursday", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "Thursday")], [0, 1]],
      ["tuesday", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "Tuesday")], [0, 1]],
      ["type", ["Brink::Api::DiscountType", XSD::QName.new(NsPosWebServiceData, "Type")], [0, 1]],
      ["useDateRangeFilter", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "UseDateRangeFilter")], [0, 1]],
      ["useDayFilter", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "UseDayFilter")], [0, 1]],
      ["useItemFilter", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "UseItemFilter")], [0, 1]],
      ["useItemGroupFilter", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "UseItemGroupFilter")], [0, 1]],
      ["useTimeRangeFilter", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "UseTimeRangeFilter")], [0, 1]],
      ["wednesday", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "Wednesday")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfEmployee,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "ArrayOfEmployee"),
    :schema_element => [
      ["employee", ["Brink::Api::Employee[]", XSD::QName.new(NsPosWebServiceData, "Employee")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::Employee,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "Employee"),
    :schema_element => [
      ["address1", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Address1")], [0, 1]],
      ["address2", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Address2")], [0, 1]],
      ["birthDate", ["SOAP::SOAPDateTime", XSD::QName.new(NsPosWebServiceData, "BirthDate")], [0, 1]],
      ["cellPhone", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "CellPhone")], [0, 1]],
      ["city", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "City")], [0, 1]],
      ["emailAddress", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "EmailAddress")], [0, 1]],
      ["firstName", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "FirstName")], [0, 1]],
      ["hireDate", ["SOAP::SOAPDateTime", XSD::QName.new(NsPosWebServiceData, "HireDate")], [0, 1]],
      ["homePhone", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "HomePhone")], [0, 1]],
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["identificationVerified", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IdentificationVerified")], [0, 1]],
      ["jobs", ["Brink::Api::EmployeeJobs", XSD::QName.new(NsPosWebServiceData, "Jobs")], [0, 1]],
      ["lastName", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "LastName")], [0, 1]],
      ["maritalStatus", ["Brink::Api::MaritalStatus", XSD::QName.new(NsPosWebServiceData, "MaritalStatus")], [0, 1]],
      ["middleName", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "MiddleName")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["notes", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Notes")], [0, 1]],
      ["payrollId", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "PayrollId")], [0, 1]],
      ["sSN", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "SSN")], [0, 1]],
      ["state", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "State")], [0, 1]],
      ["taxWithholdingAllowance", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "TaxWithholdingAllowance")], [0, 1]],
      ["terminated", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "Terminated")], [0, 1]],
      ["terminationDate", ["SOAP::SOAPDateTime", XSD::QName.new(NsPosWebServiceData, "TerminationDate")], [0, 1]],
      ["zip", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Zip")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::EmployeeJobs,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "EmployeeJobs"),
    :schema_element => [
      ["employeeJob", ["Brink::Api::EmployeeJob[]", XSD::QName.new(NsPosWebServiceData, "EmployeeJob")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::EmployeeJob,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "EmployeeJob"),
    :schema_element => [
      ["jobId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "JobId")], [0, 1]],
      ["payRate", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "PayRate")], [0, 1]],
      ["securityLevelId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "SecurityLevelId")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfItemGroup,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "ArrayOfItemGroup"),
    :schema_element => [
      ["itemGroup", ["Brink::Api::ItemGroup[]", XSD::QName.new(NsPosWebServiceData, "ItemGroup")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ItemGroup,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "ItemGroup"),
    :schema_element => [
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["isDeleted", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsDeleted")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["alternateId", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "AlternateId")], [0, 1]],
      ["items", ["Brink::Api::ArrayOfItemGroupItem", XSD::QName.new(NsPosWebServiceData, "Items")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::SettingsObject,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "SettingsObject"),
    :schema_element => [
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["isDeleted", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsDeleted")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfItemGroupItem,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "ArrayOfItemGroupItem"),
    :schema_element => [
      ["itemGroupItem", ["Brink::Api::ItemGroupItem[]", XSD::QName.new(NsPosWebServiceData, "ItemGroupItem")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ItemGroupItem,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "ItemGroupItem"),
    :schema_element => [
      ["itemId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "ItemId")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfItem,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "ArrayOfItem"),
    :schema_element => [
      ["item", ["Brink::Api::Item[]", XSD::QName.new(NsPosWebServiceData, "Item")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::Item,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "Item"),
    :schema_element => [
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["isDeleted", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsDeleted")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["active", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "Active")], [0, 1]],
      ["askName", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "AskName")], [0, 1]],
      ["askPrice", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "AskPrice")], [0, 1]],
      ["availableFriday", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "AvailableFriday")], [0, 1]],
      ["availableMonday", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "AvailableMonday")], [0, 1]],
      ["availableSaturday", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "AvailableSaturday")], [0, 1]],
      ["availableSelectDates", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "AvailableSelectDates")], [0, 1]],
      ["availableSelectDays", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "AvailableSelectDays")], [0, 1]],
      ["availableSunday", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "AvailableSunday")], [0, 1]],
      ["availableThursday", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "AvailableThursday")], [0, 1]],
      ["availableTuesday", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "AvailableTuesday")], [0, 1]],
      ["availableWednesday", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "AvailableWednesday")], [0, 1]],
      ["brandAllocations", ["Brink::Api::ArrayOfBrandAllocation", XSD::QName.new(NsPosWebServiceData, "BrandAllocations")], [0, 1]],
      ["components", ["Brink::Api::ArrayOfItemCompositeComponent", XSD::QName.new(NsPosWebServiceData, "Components")], [0, 1]],
      ["cost", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "Cost")], [0, 1]],
      ["createdTime", ["SOAP::SOAPDateTime", XSD::QName.new(NsPosWebServiceData, "CreatedTime")], [0, 1]],
      ["datesAvailable", ["Brink::Api::DateRange", XSD::QName.new(NsPosWebServiceData, "DatesAvailable")], [0, 1]],
      ["giftCardItemType", ["Brink::Api::GiftCardItemType", XSD::QName.new(NsPosWebServiceData, "GiftCardItemType")], [0, 1]],
      ["includedModifiers", ["Brink::Api::ArrayOfItemIncludedModifier", XSD::QName.new(NsPosWebServiceData, "IncludedModifiers")], [0, 1]],
      ["ingredientItemIds", ["Brink::Api::ArrayOfint", XSD::QName.new(NsPosWebServiceData, "IngredientItemIds")], [0, 1]],
      ["isCombo", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsCombo")], [0, 1]],
      ["isGiftCard", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsGiftCard")], [0, 1]],
      ["isQuantityCounted", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsQuantityCounted")], [0, 1]],
      ["itemType", ["Brink::Api::ItemType", XSD::QName.new(NsPosWebServiceData, "ItemType")], [0, 1]],
      ["kitchenName", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "KitchenName")], [0, 1]],
      ["lastEditedTime", ["SOAP::SOAPDateTime", XSD::QName.new(NsPosWebServiceData, "LastEditedTime")], [0, 1]],
      ["modifierGroupIds", ["Brink::Api::ArrayOfint", XSD::QName.new(NsPosWebServiceData, "ModifierGroupIds")], [0, 1]],
      ["modifierTierId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "ModifierTierId")], [0, 1]],
      ["modifierWeight", ["SOAP::SOAPUnsignedByte", XSD::QName.new(NsPosWebServiceData, "ModifierWeight")], [0, 1]],
      ["nonRevenueItem", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "NonRevenueItem")], [0, 1]],
      ["pLU", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "PLU")], [0, 1]],
      ["price", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "Price")], [0, 1]],
      ["priceLevel", ["SOAP::SOAPUnsignedByte", XSD::QName.new(NsPosWebServiceData, "PriceLevel")], [0, 1]],
      ["pricePer", ["Brink::Api::PricePer", XSD::QName.new(NsPosWebServiceData, "PricePer")], [0, 1]],
      ["printerGroupId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "PrinterGroupId")], [0, 1]],
      ["revenueCenterId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "RevenueCenterId")], [0, 1]],
      ["sortPriority", ["SOAP::SOAPUnsignedByte", XSD::QName.new(NsPosWebServiceData, "SortPriority")], [0, 1]],
      ["tareId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "TareId")], [0, 1]],
      ["taxIds", ["Brink::Api::ArrayOfint", XSD::QName.new(NsPosWebServiceData, "TaxIds")], [0, 1]],
      ["unitName", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "UnitName")], [0, 1]],
      ["unitPrecision", ["SOAP::SOAPUnsignedByte", XSD::QName.new(NsPosWebServiceData, "UnitPrecision")], [0, 1]],
      ["videoGroupId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "VideoGroupId")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfItemCompositeComponent,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "ArrayOfItemCompositeComponent"),
    :schema_element => [
      ["itemCompositeComponent", ["Brink::Api::ItemCompositeComponent[]", XSD::QName.new(NsPosWebServiceData, "ItemCompositeComponent")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ItemCompositeComponent,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "ItemCompositeComponent"),
    :schema_element => [
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["itemGroupId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "ItemGroupId")], [0, 1]],
      ["items", ["Brink::Api::ArrayOfItemCompositeComponentItem", XSD::QName.new(NsPosWebServiceData, "Items")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["overridePrice", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "OverridePrice")], [0, 1]],
      ["price", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "Price")], [0, 1]],
      ["rollupPrice", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "RollupPrice")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfItemCompositeComponentItem,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "ArrayOfItemCompositeComponentItem"),
    :schema_element => [
      ["itemCompositeComponentItem", ["Brink::Api::ItemCompositeComponentItem[]", XSD::QName.new(NsPosWebServiceData, "ItemCompositeComponentItem")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ItemCompositeComponentItem,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "ItemCompositeComponentItem"),
    :schema_element => [
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["isDefault", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsDefault")], [0, 1]],
      ["itemId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "ItemId")], [0, 1]],
      ["overridePrice", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "OverridePrice")], [0, 1]],
      ["price", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "Price")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfItemIncludedModifier,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "ArrayOfItemIncludedModifier"),
    :schema_element => [
      ["itemIncludedModifier", ["Brink::Api::ItemIncludedModifier[]", XSD::QName.new(NsPosWebServiceData, "ItemIncludedModifier")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ItemIncludedModifier,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "ItemIncludedModifier"),
    :schema_element => [
      ["automaticallyAdd", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "AutomaticallyAdd")], [0, 1]],
      ["isIncluded", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsIncluded")], [0, 1]],
      ["itemId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "ItemId")], [0, 1]],
      ["modifierGroupId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "ModifierGroupId")], [0, 1]],
      ["position", ["SOAP::SOAPShort", XSD::QName.new(NsPosWebServiceData, "Position")], [0, 1]],
      ["printInKitchen", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "PrintInKitchen")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfJob,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "ArrayOfJob"),
    :schema_element => [
      ["job", ["Brink::Api::Job[]", XSD::QName.new(NsPosWebServiceData, "Job")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::Job,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "Job"),
    :schema_element => [
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfLoyaltyReward,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "ArrayOfLoyaltyReward"),
    :schema_element => [
      ["loyaltyReward", ["Brink::Api::LoyaltyReward[]", XSD::QName.new(NsPosWebServiceData, "LoyaltyReward")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::LoyaltyReward,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "LoyaltyReward"),
    :schema_element => [
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["isDeleted", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsDeleted")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["isActive", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsActive")], [0, 1]],
      ["type", ["SOAP::SOAPUnsignedByte", XSD::QName.new(NsPosWebServiceData, "Type")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::DiscountReward,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "DiscountReward"),
    :schema_element => [
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["isDeleted", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsDeleted")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["isActive", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsActive")], [0, 1]],
      ["type", ["SOAP::SOAPUnsignedByte", XSD::QName.new(NsPosWebServiceData, "Type")], [0, 1]],
      ["discountId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "DiscountId")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GiftCardReward,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "GiftCardReward"),
    :schema_element => [
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["isDeleted", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsDeleted")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["isActive", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsActive")], [0, 1]],
      ["type", ["SOAP::SOAPUnsignedByte", XSD::QName.new(NsPosWebServiceData, "Type")], [0, 1]],
      ["amount", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "Amount")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::PromotionReward,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "PromotionReward"),
    :schema_element => [
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["isDeleted", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsDeleted")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["isActive", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsActive")], [0, 1]],
      ["type", ["SOAP::SOAPUnsignedByte", XSD::QName.new(NsPosWebServiceData, "Type")], [0, 1]],
      ["promotionId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "PromotionId")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::VoucherReward,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "VoucherReward"),
    :schema_element => [
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["isDeleted", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsDeleted")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["isActive", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsActive")], [0, 1]],
      ["type", ["SOAP::SOAPUnsignedByte", XSD::QName.new(NsPosWebServiceData, "Type")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfModifierCode,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "ArrayOfModifierCode"),
    :schema_element => [
      ["modifierCode", ["Brink::Api::ModifierCode[]", XSD::QName.new(NsPosWebServiceData, "ModifierCode")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ModifierCode,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "ModifierCode"),
    :schema_element => [
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["isDeleted", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsDeleted")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["abbreviation", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Abbreviation")], [0, 1]],
      ["active", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "Active")], [0, 1]],
      ["appliesTo", ["Brink::Api::ModCodeIngredientType", XSD::QName.new(NsPosWebServiceData, "AppliesTo")], [0, 1]],
      ["isSystem", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsSystem")], [0, 1]],
      ["type", ["Brink::Api::ModCodeType", XSD::QName.new(NsPosWebServiceData, "Type")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfModifierGroup,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "ArrayOfModifierGroup"),
    :schema_element => [
      ["modifierGroup", ["Brink::Api::ModifierGroup[]", XSD::QName.new(NsPosWebServiceData, "ModifierGroup")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ModifierGroup,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "ModifierGroup"),
    :schema_element => [
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["isDeleted", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "IsDeleted")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["description", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Description")], [0, 1]],
      ["displayName", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "DisplayName")], [0, 1]],
      ["flowRequired", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "FlowRequired")], [0, 1]],
      ["free", ["SOAP::SOAPUnsignedByte", XSD::QName.new(NsPosWebServiceData, "Free")], [0, 1]],
      ["items", ["Brink::Api::ArrayOfModifierGroupItem", XSD::QName.new(NsPosWebServiceData, "Items")], [0, 1]],
      ["maximum", ["SOAP::SOAPUnsignedByte", XSD::QName.new(NsPosWebServiceData, "Maximum")], [0, 1]],
      ["minimum", ["SOAP::SOAPUnsignedByte", XSD::QName.new(NsPosWebServiceData, "Minimum")], [0, 1]],
      ["panelId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "PanelId")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfModifierGroupItem,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "ArrayOfModifierGroupItem"),
    :schema_element => [
      ["modifierGroupItem", ["Brink::Api::ModifierGroupItem[]", XSD::QName.new(NsPosWebServiceData, "ModifierGroupItem")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ModifierGroupItem,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "ModifierGroupItem"),
    :schema_element => [
      ["itemId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "ItemId")], [0, 1]],
      ["position", ["SOAP::SOAPShort", XSD::QName.new(NsPosWebServiceData, "Position")], [0, 1]],
      ["price", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "Price")], [0, 1]],
      ["priceMethod", ["SOAP::SOAPUnsignedByte", XSD::QName.new(NsPosWebServiceData, "PriceMethod")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::Options,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "Options"),
    :schema_element => [
      ["accounting", ["Brink::Api::AccountingOptions", XSD::QName.new(NsPosWebServiceData, "Accounting")], [0, 1]],
      ["location", ["Brink::Api::LocationOptions", XSD::QName.new(NsPosWebServiceData, "Location")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::AccountingOptions,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "AccountingOptions"),
    :schema_element => [
      ["gLExport", ["Brink::Api::GLExport", XSD::QName.new(NsPosWebServiceData, "GLExport")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GLExport,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "GLExport"),
    :schema_element => [
      ["discounts", ["Brink::Api::ArrayOfGLExportDiscountAccount", XSD::QName.new(NsPosWebServiceData, "Discounts")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["others", ["Brink::Api::ArrayOfGLExportOtherAccount", XSD::QName.new(NsPosWebServiceData, "Others")], [0, 1]],
      ["pettyAccounts", ["Brink::Api::ArrayOfGLExportPettyAccount", XSD::QName.new(NsPosWebServiceData, "PettyAccounts")], [0, 1]],
      ["promotions", ["Brink::Api::ArrayOfGLExportPromotionAccount", XSD::QName.new(NsPosWebServiceData, "Promotions")], [0, 1]],
      ["revenueCenters", ["Brink::Api::ArrayOfGLExportRevenueCenterAccount", XSD::QName.new(NsPosWebServiceData, "RevenueCenters")], [0, 1]],
      ["surcharges", ["Brink::Api::ArrayOfGLExportSurchargeAccount", XSD::QName.new(NsPosWebServiceData, "Surcharges")], [0, 1]],
      ["taxes", ["Brink::Api::ArrayOfGLExportTaxAccount", XSD::QName.new(NsPosWebServiceData, "Taxes")], [0, 1]],
      ["tenders", ["Brink::Api::ArrayOfGLExportTenderAccount", XSD::QName.new(NsPosWebServiceData, "Tenders")], [0, 1]],
      ["tendersForEcommerce", ["Brink::Api::ArrayOfGLExportTenderAccount", XSD::QName.new(NsPosWebServiceData, "TendersForEcommerce")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfGLExportDiscountAccount,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "ArrayOfGLExportDiscountAccount"),
    :schema_element => [
      ["gLExportDiscountAccount", ["Brink::Api::GLExportDiscountAccount[]", XSD::QName.new(NsPosWebServiceData, "GLExportDiscountAccount")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GLExportDiscountAccount,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "GLExportDiscountAccount"),
    :schema_element => [
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Class")], [0, 1]],
      ["creditAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "CreditAccount")], [0, 1]],
      ["debitAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "DebitAccount")], [0, 1]],
      ["memo", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Memo")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["discountId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "DiscountId")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GLExportAccount,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "GLExportAccount"),
    :schema_element => [
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Class")], [0, 1]],
      ["creditAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "CreditAccount")], [0, 1]],
      ["debitAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "DebitAccount")], [0, 1]],
      ["memo", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Memo")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfGLExportOtherAccount,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "ArrayOfGLExportOtherAccount"),
    :schema_element => [
      ["gLExportOtherAccount", ["Brink::Api::GLExportOtherAccount[]", XSD::QName.new(NsPosWebServiceData, "GLExportOtherAccount")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GLExportOtherAccount,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "GLExportOtherAccount"),
    :schema_element => [
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Class")], [0, 1]],
      ["creditAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "CreditAccount")], [0, 1]],
      ["debitAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "DebitAccount")], [0, 1]],
      ["memo", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Memo")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["type", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Type")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfGLExportPettyAccount,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "ArrayOfGLExportPettyAccount"),
    :schema_element => [
      ["gLExportPettyAccount", ["Brink::Api::GLExportPettyAccount[]", XSD::QName.new(NsPosWebServiceData, "GLExportPettyAccount")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GLExportPettyAccount,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "GLExportPettyAccount"),
    :schema_element => [
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Class")], [0, 1]],
      ["creditAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "CreditAccount")], [0, 1]],
      ["debitAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "DebitAccount")], [0, 1]],
      ["memo", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Memo")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["pettyAccountId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "PettyAccountId")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfGLExportPromotionAccount,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "ArrayOfGLExportPromotionAccount"),
    :schema_element => [
      ["gLExportPromotionAccount", ["Brink::Api::GLExportPromotionAccount[]", XSD::QName.new(NsPosWebServiceData, "GLExportPromotionAccount")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GLExportPromotionAccount,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "GLExportPromotionAccount"),
    :schema_element => [
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Class")], [0, 1]],
      ["creditAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "CreditAccount")], [0, 1]],
      ["debitAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "DebitAccount")], [0, 1]],
      ["memo", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Memo")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["promotionId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "PromotionId")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfGLExportRevenueCenterAccount,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "ArrayOfGLExportRevenueCenterAccount"),
    :schema_element => [
      ["gLExportRevenueCenterAccount", ["Brink::Api::GLExportRevenueCenterAccount[]", XSD::QName.new(NsPosWebServiceData, "GLExportRevenueCenterAccount")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GLExportRevenueCenterAccount,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "GLExportRevenueCenterAccount"),
    :schema_element => [
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Class")], [0, 1]],
      ["creditAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "CreditAccount")], [0, 1]],
      ["debitAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "DebitAccount")], [0, 1]],
      ["memo", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Memo")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["revenueCenterId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "RevenueCenterId")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfGLExportSurchargeAccount,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "ArrayOfGLExportSurchargeAccount"),
    :schema_element => [
      ["gLExportSurchargeAccount", ["Brink::Api::GLExportSurchargeAccount[]", XSD::QName.new(NsPosWebServiceData, "GLExportSurchargeAccount")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GLExportSurchargeAccount,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "GLExportSurchargeAccount"),
    :schema_element => [
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Class")], [0, 1]],
      ["creditAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "CreditAccount")], [0, 1]],
      ["debitAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "DebitAccount")], [0, 1]],
      ["memo", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Memo")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["surchargeId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "SurchargeId")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfGLExportTaxAccount,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "ArrayOfGLExportTaxAccount"),
    :schema_element => [
      ["gLExportTaxAccount", ["Brink::Api::GLExportTaxAccount[]", XSD::QName.new(NsPosWebServiceData, "GLExportTaxAccount")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GLExportTaxAccount,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "GLExportTaxAccount"),
    :schema_element => [
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Class")], [0, 1]],
      ["creditAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "CreditAccount")], [0, 1]],
      ["debitAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "DebitAccount")], [0, 1]],
      ["memo", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Memo")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["taxId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "TaxId")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfGLExportTenderAccount,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "ArrayOfGLExportTenderAccount"),
    :schema_element => [
      ["gLExportTenderAccount", ["Brink::Api::GLExportTenderAccount[]", XSD::QName.new(NsPosWebServiceData, "GLExportTenderAccount")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GLExportTenderAccount,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "GLExportTenderAccount"),
    :schema_element => [
      ["v_class", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Class")], [0, 1]],
      ["creditAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "CreditAccount")], [0, 1]],
      ["debitAccount", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "DebitAccount")], [0, 1]],
      ["memo", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Memo")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["tenderId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "TenderId")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::LocationOptions,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "LocationOptions"),
    :schema_element => [
      ["address1", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Address1")], [0, 1]],
      ["address2", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Address2")], [0, 1]],
      ["city", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "City")], [0, 1]],
      ["country", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Country")], [0, 1]],
      ["fax", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Fax")], [0, 1]],
      ["latitude", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "Latitude")], [0, 1]],
      ["longitude", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "Longitude")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["phone", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Phone")], [0, 1]],
      ["state", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "State")], [0, 1]],
      ["timeZone", ["Brink::Api::TimeZone", XSD::QName.new(NsPosWebServiceData, "TimeZone")], [0, 1]],
      ["zip", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Zip")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::TimeZone,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "TimeZone")
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfPettyAccount,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "ArrayOfPettyAccount"),
    :schema_element => [
      ["pettyAccount", ["Brink::Api::PettyAccount[]", XSD::QName.new(NsPosWebServiceData, "PettyAccount")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::PettyAccount,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "PettyAccount"),
    :schema_element => [
      ["accountType", ["Brink::Api::PettyAccountType", XSD::QName.new(NsPosWebServiceData, "AccountType")], [0, 1]],
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfPromotion,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "ArrayOfPromotion"),
    :schema_element => [
      ["promotion", ["Brink::Api::Promotion[]", XSD::QName.new(NsPosWebServiceData, "Promotion")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::Promotion,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "Promotion"),
    :schema_element => [
      ["active", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "Active")], [0, 1]],
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["type", ["Brink::Api::PromotionType", XSD::QName.new(NsPosWebServiceData, "Type")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfRegister,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "ArrayOfRegister"),
    :schema_element => [
      ["register", ["Brink::Api::Register[]", XSD::QName.new(NsPosWebServiceData, "Register")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::Register,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "Register"),
    :schema_element => [
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["number", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Number")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfRevenueCenter,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "ArrayOfRevenueCenter"),
    :schema_element => [
      ["revenueCenter", ["Brink::Api::RevenueCenter[]", XSD::QName.new(NsPosWebServiceData, "RevenueCenter")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::RevenueCenter,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "RevenueCenter"),
    :schema_element => [
      ["active", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "Active")], [0, 1]],
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["taxIds", ["Brink::Api::ArrayOfint", XSD::QName.new(NsPosWebServiceData, "TaxIds")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfSection,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "ArrayOfSection"),
    :schema_element => [
      ["section", ["Brink::Api::Section[]", XSD::QName.new(NsPosWebServiceData, "Section")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::Section,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "Section"),
    :schema_element => [
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfSurcharge,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "ArrayOfSurcharge"),
    :schema_element => [
      ["surcharge", ["Brink::Api::Surcharge[]", XSD::QName.new(NsPosWebServiceData, "Surcharge")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::Surcharge,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "Surcharge"),
    :schema_element => [
      ["amount", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "Amount")], [0, 1]],
      ["automaticallyApply", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "AutomaticallyApply")], [0, 1]],
      ["days", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Days")], [0, 1]],
      ["endDate", ["SOAP::SOAPDateTime", XSD::QName.new(NsPosWebServiceData, "EndDate")], [0, 1]],
      ["endTime", ["SOAP::SOAPDateTime", XSD::QName.new(NsPosWebServiceData, "EndTime")], [0, 1]],
      ["enforceDateRanges", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "EnforceDateRanges")], [0, 1]],
      ["enforceDays", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "EnforceDays")], [0, 1]],
      ["enforcePartySize", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "EnforcePartySize")], [0, 1]],
      ["enforceTimeRanges", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "EnforceTimeRanges")], [0, 1]],
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["limitDestinations", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "LimitDestinations")], [0, 1]],
      ["limitSections", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "LimitSections")], [0, 1]],
      ["maximumPartySize", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "MaximumPartySize")], [0, 1]],
      ["method", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Method")], [0, 1]],
      ["minimumPartySize", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "MinimumPartySize")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["prompt", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "Prompt")], [0, 1]],
      ["startDate", ["SOAP::SOAPDateTime", XSD::QName.new(NsPosWebServiceData, "StartDate")], [0, 1]],
      ["startTime", ["SOAP::SOAPDateTime", XSD::QName.new(NsPosWebServiceData, "StartTime")], [0, 1]],
      ["taxIds", ["Brink::Api::ArrayOfint", XSD::QName.new(NsPosWebServiceData, "TaxIds")], [0, 1]],
      ["terminalTypes", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "TerminalTypes")], [0, 1]],
      ["type", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Type")], [0, 1]],
      ["validDestinationIds", ["Brink::Api::ArrayOfint", XSD::QName.new(NsPosWebServiceData, "ValidDestinationIds")], [0, 1]],
      ["validSectionIds", ["Brink::Api::ArrayOfint", XSD::QName.new(NsPosWebServiceData, "ValidSectionIds")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfTax,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "ArrayOfTax"),
    :schema_element => [
      ["tax", ["Brink::Api::Tax[]", XSD::QName.new(NsPosWebServiceData, "Tax")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::Tax,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "Tax"),
    :schema_element => [
      ["amount", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "Amount")], [0, 1]],
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["type", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Type")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfTender,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "ArrayOfTender"),
    :schema_element => [
      ["tender", ["Brink::Api::Tender[]", XSD::QName.new(NsPosWebServiceData, "Tender")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::Tender,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "Tender"),
    :schema_element => [
      ["active", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "Active")], [0, 1]],
      ["allowChange", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "AllowChange")], [0, 1]],
      ["allowTips", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "AllowTips")], [0, 1]],
      ["cardType", ["Brink::Api::CardType", XSD::QName.new(NsPosWebServiceData, "CardType")], [0, 1]],
      ["defaultAmount", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "DefaultAmount")], [0, 1]],
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["maxTipPercent", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "MaxTipPercent")], [0, 1]],
      ["maximumAccountDigits", ["SOAP::SOAPByte", XSD::QName.new(NsPosWebServiceData, "MaximumAccountDigits")], [0, 1]],
      ["minimumAccountDigits", ["SOAP::SOAPByte", XSD::QName.new(NsPosWebServiceData, "MinimumAccountDigits")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]],
      ["openDrawer", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "OpenDrawer")], [0, 1]],
      ["reconciliationMethod", ["Brink::Api::ReconciliationMethod", XSD::QName.new(NsPosWebServiceData, "ReconciliationMethod")], [0, 1]],
      ["requiresAuthorization", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "RequiresAuthorization")], [0, 1]],
      ["signatureCapture", ["SOAP::SOAPBoolean", XSD::QName.new(NsPosWebServiceData, "SignatureCapture")], [0, 1]],
      ["tenderType", ["Brink::Api::TenderType", XSD::QName.new(NsPosWebServiceData, "TenderType")], [0, 1]],
      ["varianceAmount", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceData, "VarianceAmount")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfVoidReason,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "ArrayOfVoidReason"),
    :schema_element => [
      ["voidReason", ["Brink::Api::VoidReason[]", XSD::QName.new(NsPosWebServiceData, "VoidReason")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::VoidReason,
    :schema_name => XSD::QName.new(NsPosWebServiceData, "VoidReason"),
    :schema_element => [
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceData, "Id")], [0, 1]],
      ["name", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceData, "Name")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfint,
    :schema_name => XSD::QName.new(NsArrays, "ArrayOfint"),
    :schema_element => [
      ["int", "SOAP::SOAPInt[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::DiscountGranularity,
    :schema_name => XSD::QName.new(NsPos, "DiscountGranularity")
  )

  LiteralRegistry.register(
    :class => Brink::Api::DiscountType,
    :schema_name => XSD::QName.new(NsPos, "DiscountType")
  )

  LiteralRegistry.register(
    :class => Brink::Api::MaritalStatus,
    :schema_name => XSD::QName.new(NsPos, "MaritalStatus")
  )

  LiteralRegistry.register(
    :class => Brink::Api::ArrayOfBrandAllocation,
    :schema_name => XSD::QName.new(NsPos, "ArrayOfBrandAllocation"),
    :schema_element => [
      ["brandAllocation", ["Brink::Api::BrandAllocation[]", XSD::QName.new(NsPos, "BrandAllocation")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::BrandAllocation,
    :schema_name => XSD::QName.new(NsPos, "BrandAllocation"),
    :schema_element => [
      ["brandId", ["SOAP::SOAPInt", XSD::QName.new(NsPos, "BrandId")], [0, 1]],
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsPos, "Id")], [0, 1]],
      ["weight", ["SOAP::SOAPDecimal", XSD::QName.new(NsPos, "Weight")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::GiftCardItemType,
    :schema_name => XSD::QName.new(NsPos, "GiftCardItemType")
  )

  LiteralRegistry.register(
    :class => Brink::Api::ItemType,
    :schema_name => XSD::QName.new(NsPos, "ItemType")
  )

  LiteralRegistry.register(
    :class => Brink::Api::PricePer,
    :schema_name => XSD::QName.new(NsPos, "PricePer")
  )

  LiteralRegistry.register(
    :class => Brink::Api::ModCodeIngredientType,
    :schema_name => XSD::QName.new(NsPos, "ModCodeIngredientType")
  )

  LiteralRegistry.register(
    :class => Brink::Api::ModCodeType,
    :schema_name => XSD::QName.new(NsPos, "ModCodeType")
  )

  LiteralRegistry.register(
    :class => Brink::Api::PettyAccountType,
    :schema_name => XSD::QName.new(NsPos, "PettyAccountType")
  )

  LiteralRegistry.register(
    :class => Brink::Api::PromotionType,
    :schema_name => XSD::QName.new(NsPos, "PromotionType")
  )

  LiteralRegistry.register(
    :class => Brink::Api::ReconciliationMethod,
    :schema_name => XSD::QName.new(NsPos, "ReconciliationMethod")
  )

  LiteralRegistry.register(
    :class => Brink::Api::TenderType,
    :schema_name => XSD::QName.new(NsPos, "TenderType")
  )

  LiteralRegistry.register(
    :class => Brink::Api::DateRange,
    :schema_name => XSD::QName.new(NsBrinkFoundation, "DateRange"),
    :schema_element => [
      ["v_end", ["SOAP::SOAPDateTime", XSD::QName.new(NsBrinkFoundation, "End")], [0, 1]],
      ["start", ["SOAP::SOAPDateTime", XSD::QName.new(NsBrinkFoundation, "Start")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::CardType,
    :schema_name => XSD::QName.new(NsBrinkCredit, "CardType")
  )

  LiteralRegistry.register(
    :class => Brink::Api::AccessFault,
    :schema_name => XSD::QName.new(NsPosWebServiceFaults, "AccessFault"),
    :schema_element => [
      ["code", ["Brink::Api::AccessErrorCode", XSD::QName.new(NsPosWebServiceFaults, "Code")], [0, 1]],
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceFaults, "Message")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::AccessErrorCode,
    :schema_name => XSD::QName.new(NsPosWebServiceFaults, "AccessErrorCode")
  )

  LiteralRegistry.register(
    :class => Brink::Api::LocationFault,
    :schema_name => XSD::QName.new(NsPosWebServiceFaults, "LocationFault"),
    :schema_element => [
      ["code", ["Brink::Api::LocationErrorCode", XSD::QName.new(NsPosWebServiceFaults, "Code")], [0, 1]],
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceFaults, "Message")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Brink::Api::LocationErrorCode,
    :schema_name => XSD::QName.new(NsPosWebServiceFaults, "LocationErrorCode")
  )
end

end; end
