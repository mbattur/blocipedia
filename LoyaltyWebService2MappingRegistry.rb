# encoding: UTF-8
# Generated by wsdl2ruby (SOAP4R-NG/2.0.3)
require_relative 'LoyaltyWebService2.rb'
require 'soap/mapping'

module LoyaltyWebService2MappingRegistry
  EncodedRegistry = ::SOAP::Mapping::EncodedRegistry.new
  LiteralRegistry = ::SOAP::Mapping::LiteralRegistry.new
  NsArrays = "http://schemas.microsoft.com/2003/10/Serialization/Arrays"
  NsPosWebService = "http://schemas.datacontract.org/2004/07/Pos.Web.Service"
  NsPosWebServiceLoyaltyVersion2Operations = "http://schemas.datacontract.org/2004/07/Pos.Web.Service.Loyalty.Version2.Operations"
  NsSystem = "http://schemas.datacontract.org/2004/07/System"
  NsV2 = "http://www.brinksoftware.com/webservices/loyalty/v2"

  EncodedRegistry.register(
    :class => AddManualAdjustmentReply,
    :schema_type => XSD::QName.new(NsV2, "AddManualAdjustmentReply"),
    :schema_basetype => XSD::QName.new(NsV2, "LoyaltyWebService2Reply"),
    :schema_element => [
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsPosWebService, "Message")], [0, 1]],
      ["resultCode", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebService, "ResultCode")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => LoyaltyWebService2Reply,
    :schema_type => XSD::QName.new(NsV2, "LoyaltyWebService2Reply"),
    :schema_basetype => XSD::QName.new(NsPosWebService, "Reply"),
    :schema_element => [
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsPosWebService, "Message")], [0, 1]],
      ["resultCode", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebService, "ResultCode")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => GetActivityRequest,
    :schema_type => XSD::QName.new(NsV2, "GetActivityRequest"),
    :schema_element => [
      ["customerId", [nil, XSD::QName.new(NsV2, "CustomerId")], [0, 1]],
      ["groupToken", ["SOAP::SOAPString", XSD::QName.new(NsV2, "GroupToken")], [0, 1]],
      ["recordOffset", ["SOAP::SOAPUnsignedInt", XSD::QName.new(NsV2, "RecordOffset")], [0, 1]],
      ["startTime", ["DateTimeOffset", XSD::QName.new(NsV2, "StartTime")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => GetActivityReply,
    :schema_type => XSD::QName.new(NsV2, "GetActivityReply"),
    :schema_basetype => XSD::QName.new(NsV2, "LoyaltyWebService2Reply"),
    :schema_element => [
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsPosWebService, "Message")], [0, 1]],
      ["resultCode", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebService, "ResultCode")], [0, 1]],
      ["activity", ["ArrayOfActivityDetail", XSD::QName.new(NsV2, "Activity")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ArrayOfActivityDetail,
    :schema_type => XSD::QName.new(NsV2, "ArrayOfActivityDetail"),
    :schema_element => [
      ["activityDetail", ["ActivityDetail[]", XSD::QName.new(NsV2, "ActivityDetail")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => ActivityDetail,
    :schema_type => XSD::QName.new(NsV2, "ActivityDetail"),
    :schema_element => [
      ["customerId", [nil, XSD::QName.new(NsV2, "CustomerId")], [0, 1]],
      ["locationId", [nil, XSD::QName.new(NsV2, "LocationId")], [0, 1]],
      ["orderId", ["SOAP::SOAPLong", XSD::QName.new(NsV2, "OrderId")], [0, 1]],
      ["planId", ["SOAP::SOAPInt", XSD::QName.new(NsV2, "PlanId")], [0, 1]],
      ["time", ["DateTimeOffset", XSD::QName.new(NsV2, "Time")], [0, 1]],
      ["type", ["SOAP::SOAPUnsignedByte", XSD::QName.new(NsV2, "Type")], [0, 1]],
      ["value", ["SOAP::SOAPDecimal", XSD::QName.new(NsV2, "Value")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => GetAdjustmentDetailsRequest,
    :schema_type => XSD::QName.new(NsV2, "GetAdjustmentDetailsRequest"),
    :schema_element => [
      ["groupToken", ["SOAP::SOAPString", XSD::QName.new(NsV2, "GroupToken")], [0, 1]],
      ["includeBulkAdjustments", ["SOAP::SOAPBoolean", XSD::QName.new(NsV2, "IncludeBulkAdjustments")], [0, 1]],
      ["recordOffset", ["SOAP::SOAPUnsignedInt", XSD::QName.new(NsV2, "RecordOffset")], [0, 1]],
      ["startTime", ["DateTimeOffset", XSD::QName.new(NsV2, "StartTime")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => GetAdjustmentDetailsReply,
    :schema_type => XSD::QName.new(NsV2, "GetAdjustmentDetailsReply"),
    :schema_basetype => XSD::QName.new(NsV2, "LoyaltyWebService2Reply"),
    :schema_element => [
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsPosWebService, "Message")], [0, 1]],
      ["resultCode", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebService, "ResultCode")], [0, 1]],
      ["adjustments", ["ArrayOfAdjustmentDetail", XSD::QName.new(NsV2, "Adjustments")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ArrayOfAdjustmentDetail,
    :schema_type => XSD::QName.new(NsV2, "ArrayOfAdjustmentDetail"),
    :schema_element => [
      ["adjustmentDetail", ["AdjustmentDetail[]", XSD::QName.new(NsV2, "AdjustmentDetail")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => AdjustmentDetail,
    :schema_type => XSD::QName.new(NsV2, "AdjustmentDetail"),
    :schema_element => [
      ["activityType", ["SOAP::SOAPInt", XSD::QName.new(NsV2, "ActivityType")], [0, 1]],
      ["customerId", [nil, XSD::QName.new(NsV2, "CustomerId")], [0, 1]],
      ["isBulkAdjustment", ["SOAP::SOAPBoolean", XSD::QName.new(NsV2, "IsBulkAdjustment")], [0, 1]],
      ["notes", ["SOAP::SOAPString", XSD::QName.new(NsV2, "Notes")], [0, 1]],
      ["planId", ["SOAP::SOAPInt", XSD::QName.new(NsV2, "PlanId")], [0, 1]],
      ["reasonId", ["SOAP::SOAPInt", XSD::QName.new(NsV2, "ReasonId")], [0, 1]],
      ["rewardId", ["SOAP::SOAPInt", XSD::QName.new(NsV2, "RewardId")], [0, 1]],
      ["rewardValue", ["SOAP::SOAPDecimal", XSD::QName.new(NsV2, "RewardValue")], [0, 1]],
      ["time", ["DateTimeOffset", XSD::QName.new(NsV2, "Time")], [0, 1]],
      ["value", ["SOAP::SOAPDecimal", XSD::QName.new(NsV2, "Value")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => GetAwardRedemptionsRequest,
    :schema_type => XSD::QName.new(NsV2, "GetAwardRedemptionsRequest"),
    :schema_element => [
      ["customerId", [nil, XSD::QName.new(NsV2, "CustomerId")], [0, 1]],
      ["groupToken", ["SOAP::SOAPString", XSD::QName.new(NsV2, "GroupToken")], [0, 1]],
      ["recordOffset", ["SOAP::SOAPUnsignedInt", XSD::QName.new(NsV2, "RecordOffset")], [0, 1]],
      ["startTime", ["DateTimeOffset", XSD::QName.new(NsV2, "StartTime")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => GetAwardRedemptionsReply,
    :schema_type => XSD::QName.new(NsV2, "GetAwardRedemptionsReply"),
    :schema_basetype => XSD::QName.new(NsV2, "LoyaltyWebService2Reply"),
    :schema_element => [
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsPosWebService, "Message")], [0, 1]],
      ["resultCode", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebService, "ResultCode")], [0, 1]],
      ["redemptions", ["ArrayOfAwardRedemption", XSD::QName.new(NsV2, "Redemptions")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => ArrayOfAwardRedemption,
    :schema_type => XSD::QName.new(NsV2, "ArrayOfAwardRedemption"),
    :schema_element => [
      ["awardRedemption", ["AwardRedemption[]", XSD::QName.new(NsV2, "AwardRedemption")], [0, nil]]
    ]
  )

  EncodedRegistry.register(
    :class => AwardRedemption,
    :schema_type => XSD::QName.new(NsV2, "AwardRedemption"),
    :schema_element => [
      ["awardId", ["SOAP::SOAPInt", XSD::QName.new(NsV2, "AwardId")], [0, 1]],
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsV2, "Id")], [0, 1]],
      ["locationId", [nil, XSD::QName.new(NsV2, "LocationId")], [0, 1]],
      ["orderId", ["SOAP::SOAPLong", XSD::QName.new(NsV2, "OrderId")], [0, 1]],
      ["time", ["DateTimeOffset", XSD::QName.new(NsV2, "Time")], [0, 1]],
      ["value", ["SOAP::SOAPDecimal", XSD::QName.new(NsV2, "Value")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => RedeemAwardsRequest,
    :schema_type => XSD::QName.new(NsV2, "RedeemAwardsRequest"),
    :schema_element => [
      ["allowPartialSuccess", ["SOAP::SOAPBoolean", XSD::QName.new(NsV2, "AllowPartialSuccess")], [0, 1]],
      ["awardIds", ["ArrayOfint", XSD::QName.new(NsV2, "AwardIds")], [0, 1]],
      ["groupToken", ["SOAP::SOAPString", XSD::QName.new(NsV2, "GroupToken")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => RedeemAwardsReply,
    :schema_type => XSD::QName.new(NsV2, "RedeemAwardsReply"),
    :schema_basetype => XSD::QName.new(NsV2, "LoyaltyWebService2Reply"),
    :schema_element => [
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsPosWebService, "Message")], [0, 1]],
      ["resultCode", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebService, "ResultCode")], [0, 1]],
      ["alreadyRedeemedAwardIds", ["ArrayOfint", XSD::QName.new(NsV2, "AlreadyRedeemedAwardIds")], [0, 1]],
      ["invalidAwardIds", ["ArrayOfint", XSD::QName.new(NsV2, "InvalidAwardIds")], [0, 1]],
      ["successfulAwardIds", ["ArrayOfint", XSD::QName.new(NsV2, "SuccessfulAwardIds")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => AddManualAdjustmentRequest,
    :schema_type => XSD::QName.new(NsPosWebServiceLoyaltyVersion2Operations, "AddManualAdjustmentRequest"),
    :schema_element => [
      ["customerId", [nil, XSD::QName.new(NsPosWebServiceLoyaltyVersion2Operations, "CustomerId")], [0, 1]],
      ["groupToken", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceLoyaltyVersion2Operations, "GroupToken")], [0, 1]],
      ["planId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceLoyaltyVersion2Operations, "PlanId")], [0, 1]],
      ["reasonId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceLoyaltyVersion2Operations, "ReasonId")], [0, 1]],
      ["value", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceLoyaltyVersion2Operations, "Value")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => Reply,
    :schema_type => XSD::QName.new(NsPosWebService, "Reply"),
    :schema_element => [
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsPosWebService, "Message")], [0, 1]],
      ["resultCode", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebService, "ResultCode")], [0, 1]]
    ]
  )

  EncodedRegistry.register(
    :class => DateTimeOffset,
    :schema_type => XSD::QName.new(NsSystem, "DateTimeOffset"),
    :schema_element => [
      ["dateTime", ["SOAP::SOAPDateTime", XSD::QName.new(NsSystem, "DateTime")]],
      ["offsetMinutes", ["SOAP::SOAPShort", XSD::QName.new(NsSystem, "OffsetMinutes")]]
    ]
  )

  EncodedRegistry.register(
    :class => ArrayOfint,
    :schema_type => XSD::QName.new(NsArrays, "ArrayOfint"),
    :schema_element => [
      ["int", "SOAP::SOAPInt[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => AddManualAdjustmentReply,
    :schema_type => XSD::QName.new(NsV2, "AddManualAdjustmentReply"),
    :schema_basetype => XSD::QName.new(NsV2, "LoyaltyWebService2Reply"),
    :schema_element => [
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsPosWebService, "Message")], [0, 1]],
      ["resultCode", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebService, "ResultCode")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => LoyaltyWebService2Reply,
    :schema_type => XSD::QName.new(NsV2, "LoyaltyWebService2Reply"),
    :schema_basetype => XSD::QName.new(NsPosWebService, "Reply"),
    :schema_element => [
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsPosWebService, "Message")], [0, 1]],
      ["resultCode", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebService, "ResultCode")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => GetActivityRequest,
    :schema_type => XSD::QName.new(NsV2, "GetActivityRequest"),
    :schema_element => [
      ["customerId", [nil, XSD::QName.new(NsV2, "CustomerId")], [0, 1]],
      ["groupToken", ["SOAP::SOAPString", XSD::QName.new(NsV2, "GroupToken")], [0, 1]],
      ["recordOffset", ["SOAP::SOAPUnsignedInt", XSD::QName.new(NsV2, "RecordOffset")], [0, 1]],
      ["startTime", ["DateTimeOffset", XSD::QName.new(NsV2, "StartTime")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => GetActivityReply,
    :schema_type => XSD::QName.new(NsV2, "GetActivityReply"),
    :schema_basetype => XSD::QName.new(NsV2, "LoyaltyWebService2Reply"),
    :schema_element => [
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsPosWebService, "Message")], [0, 1]],
      ["resultCode", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebService, "ResultCode")], [0, 1]],
      ["activity", ["ArrayOfActivityDetail", XSD::QName.new(NsV2, "Activity")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ArrayOfActivityDetail,
    :schema_type => XSD::QName.new(NsV2, "ArrayOfActivityDetail"),
    :schema_element => [
      ["activityDetail", ["ActivityDetail[]", XSD::QName.new(NsV2, "ActivityDetail")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => ActivityDetail,
    :schema_type => XSD::QName.new(NsV2, "ActivityDetail"),
    :schema_element => [
      ["customerId", [nil, XSD::QName.new(NsV2, "CustomerId")], [0, 1]],
      ["locationId", [nil, XSD::QName.new(NsV2, "LocationId")], [0, 1]],
      ["orderId", ["SOAP::SOAPLong", XSD::QName.new(NsV2, "OrderId")], [0, 1]],
      ["planId", ["SOAP::SOAPInt", XSD::QName.new(NsV2, "PlanId")], [0, 1]],
      ["time", ["DateTimeOffset", XSD::QName.new(NsV2, "Time")], [0, 1]],
      ["type", ["SOAP::SOAPUnsignedByte", XSD::QName.new(NsV2, "Type")], [0, 1]],
      ["value", ["SOAP::SOAPDecimal", XSD::QName.new(NsV2, "Value")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => GetAdjustmentDetailsRequest,
    :schema_type => XSD::QName.new(NsV2, "GetAdjustmentDetailsRequest"),
    :schema_element => [
      ["groupToken", ["SOAP::SOAPString", XSD::QName.new(NsV2, "GroupToken")], [0, 1]],
      ["includeBulkAdjustments", ["SOAP::SOAPBoolean", XSD::QName.new(NsV2, "IncludeBulkAdjustments")], [0, 1]],
      ["recordOffset", ["SOAP::SOAPUnsignedInt", XSD::QName.new(NsV2, "RecordOffset")], [0, 1]],
      ["startTime", ["DateTimeOffset", XSD::QName.new(NsV2, "StartTime")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => GetAdjustmentDetailsReply,
    :schema_type => XSD::QName.new(NsV2, "GetAdjustmentDetailsReply"),
    :schema_basetype => XSD::QName.new(NsV2, "LoyaltyWebService2Reply"),
    :schema_element => [
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsPosWebService, "Message")], [0, 1]],
      ["resultCode", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebService, "ResultCode")], [0, 1]],
      ["adjustments", ["ArrayOfAdjustmentDetail", XSD::QName.new(NsV2, "Adjustments")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ArrayOfAdjustmentDetail,
    :schema_type => XSD::QName.new(NsV2, "ArrayOfAdjustmentDetail"),
    :schema_element => [
      ["adjustmentDetail", ["AdjustmentDetail[]", XSD::QName.new(NsV2, "AdjustmentDetail")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => AdjustmentDetail,
    :schema_type => XSD::QName.new(NsV2, "AdjustmentDetail"),
    :schema_element => [
      ["activityType", ["SOAP::SOAPInt", XSD::QName.new(NsV2, "ActivityType")], [0, 1]],
      ["customerId", [nil, XSD::QName.new(NsV2, "CustomerId")], [0, 1]],
      ["isBulkAdjustment", ["SOAP::SOAPBoolean", XSD::QName.new(NsV2, "IsBulkAdjustment")], [0, 1]],
      ["notes", ["SOAP::SOAPString", XSD::QName.new(NsV2, "Notes")], [0, 1]],
      ["planId", ["SOAP::SOAPInt", XSD::QName.new(NsV2, "PlanId")], [0, 1]],
      ["reasonId", ["SOAP::SOAPInt", XSD::QName.new(NsV2, "ReasonId")], [0, 1]],
      ["rewardId", ["SOAP::SOAPInt", XSD::QName.new(NsV2, "RewardId")], [0, 1]],
      ["rewardValue", ["SOAP::SOAPDecimal", XSD::QName.new(NsV2, "RewardValue")], [0, 1]],
      ["time", ["DateTimeOffset", XSD::QName.new(NsV2, "Time")], [0, 1]],
      ["value", ["SOAP::SOAPDecimal", XSD::QName.new(NsV2, "Value")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => GetAwardRedemptionsRequest,
    :schema_type => XSD::QName.new(NsV2, "GetAwardRedemptionsRequest"),
    :schema_element => [
      ["customerId", [nil, XSD::QName.new(NsV2, "CustomerId")], [0, 1]],
      ["groupToken", ["SOAP::SOAPString", XSD::QName.new(NsV2, "GroupToken")], [0, 1]],
      ["recordOffset", ["SOAP::SOAPUnsignedInt", XSD::QName.new(NsV2, "RecordOffset")], [0, 1]],
      ["startTime", ["DateTimeOffset", XSD::QName.new(NsV2, "StartTime")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => GetAwardRedemptionsReply,
    :schema_type => XSD::QName.new(NsV2, "GetAwardRedemptionsReply"),
    :schema_basetype => XSD::QName.new(NsV2, "LoyaltyWebService2Reply"),
    :schema_element => [
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsPosWebService, "Message")], [0, 1]],
      ["resultCode", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebService, "ResultCode")], [0, 1]],
      ["redemptions", ["ArrayOfAwardRedemption", XSD::QName.new(NsV2, "Redemptions")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ArrayOfAwardRedemption,
    :schema_type => XSD::QName.new(NsV2, "ArrayOfAwardRedemption"),
    :schema_element => [
      ["awardRedemption", ["AwardRedemption[]", XSD::QName.new(NsV2, "AwardRedemption")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => AwardRedemption,
    :schema_type => XSD::QName.new(NsV2, "AwardRedemption"),
    :schema_element => [
      ["awardId", ["SOAP::SOAPInt", XSD::QName.new(NsV2, "AwardId")], [0, 1]],
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsV2, "Id")], [0, 1]],
      ["locationId", [nil, XSD::QName.new(NsV2, "LocationId")], [0, 1]],
      ["orderId", ["SOAP::SOAPLong", XSD::QName.new(NsV2, "OrderId")], [0, 1]],
      ["time", ["DateTimeOffset", XSD::QName.new(NsV2, "Time")], [0, 1]],
      ["value", ["SOAP::SOAPDecimal", XSD::QName.new(NsV2, "Value")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => RedeemAwardsRequest,
    :schema_type => XSD::QName.new(NsV2, "RedeemAwardsRequest"),
    :schema_element => [
      ["allowPartialSuccess", ["SOAP::SOAPBoolean", XSD::QName.new(NsV2, "AllowPartialSuccess")], [0, 1]],
      ["awardIds", ["ArrayOfint", XSD::QName.new(NsV2, "AwardIds")], [0, 1]],
      ["groupToken", ["SOAP::SOAPString", XSD::QName.new(NsV2, "GroupToken")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => RedeemAwardsReply,
    :schema_type => XSD::QName.new(NsV2, "RedeemAwardsReply"),
    :schema_basetype => XSD::QName.new(NsV2, "LoyaltyWebService2Reply"),
    :schema_element => [
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsPosWebService, "Message")], [0, 1]],
      ["resultCode", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebService, "ResultCode")], [0, 1]],
      ["alreadyRedeemedAwardIds", ["ArrayOfint", XSD::QName.new(NsV2, "AlreadyRedeemedAwardIds")], [0, 1]],
      ["invalidAwardIds", ["ArrayOfint", XSD::QName.new(NsV2, "InvalidAwardIds")], [0, 1]],
      ["successfulAwardIds", ["ArrayOfint", XSD::QName.new(NsV2, "SuccessfulAwardIds")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => AddManualAdjustmentRequest,
    :schema_type => XSD::QName.new(NsPosWebServiceLoyaltyVersion2Operations, "AddManualAdjustmentRequest"),
    :schema_element => [
      ["customerId", [nil, XSD::QName.new(NsPosWebServiceLoyaltyVersion2Operations, "CustomerId")], [0, 1]],
      ["groupToken", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceLoyaltyVersion2Operations, "GroupToken")], [0, 1]],
      ["planId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceLoyaltyVersion2Operations, "PlanId")], [0, 1]],
      ["reasonId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceLoyaltyVersion2Operations, "ReasonId")], [0, 1]],
      ["value", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceLoyaltyVersion2Operations, "Value")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Reply,
    :schema_type => XSD::QName.new(NsPosWebService, "Reply"),
    :schema_element => [
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsPosWebService, "Message")], [0, 1]],
      ["resultCode", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebService, "ResultCode")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => DateTimeOffset,
    :schema_type => XSD::QName.new(NsSystem, "DateTimeOffset"),
    :schema_element => [
      ["dateTime", ["SOAP::SOAPDateTime", XSD::QName.new(NsSystem, "DateTime")]],
      ["offsetMinutes", ["SOAP::SOAPShort", XSD::QName.new(NsSystem, "OffsetMinutes")]]
    ]
  )

  LiteralRegistry.register(
    :class => ArrayOfint,
    :schema_type => XSD::QName.new(NsArrays, "ArrayOfint"),
    :schema_element => [
      ["int", "SOAP::SOAPInt[]", [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => AddManualAdjustment,
    :schema_name => XSD::QName.new(NsV2, "AddManualAdjustment"),
    :schema_element => [
      ["request", "AddManualAdjustmentRequest", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => AddManualAdjustmentResponse,
    :schema_name => XSD::QName.new(NsV2, "AddManualAdjustmentResponse"),
    :schema_element => [
      ["addManualAdjustmentResult", ["AddManualAdjustmentReply", XSD::QName.new(NsV2, "AddManualAdjustmentResult")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => AddManualAdjustmentReply,
    :schema_name => XSD::QName.new(NsV2, "AddManualAdjustmentReply"),
    :schema_element => [
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsPosWebService, "Message")], [0, 1]],
      ["resultCode", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebService, "ResultCode")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => LoyaltyWebService2Reply,
    :schema_name => XSD::QName.new(NsV2, "LoyaltyWebService2Reply"),
    :schema_element => [
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsPosWebService, "Message")], [0, 1]],
      ["resultCode", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebService, "ResultCode")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => GetActivity,
    :schema_name => XSD::QName.new(NsV2, "GetActivity"),
    :schema_element => [
      ["request", "GetActivityRequest", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => GetActivityRequest,
    :schema_name => XSD::QName.new(NsV2, "GetActivityRequest"),
    :schema_element => [
      ["customerId", [nil, XSD::QName.new(NsV2, "CustomerId")], [0, 1]],
      ["groupToken", ["SOAP::SOAPString", XSD::QName.new(NsV2, "GroupToken")], [0, 1]],
      ["recordOffset", ["SOAP::SOAPUnsignedInt", XSD::QName.new(NsV2, "RecordOffset")], [0, 1]],
      ["startTime", ["DateTimeOffset", XSD::QName.new(NsV2, "StartTime")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => GetActivityResponse,
    :schema_name => XSD::QName.new(NsV2, "GetActivityResponse"),
    :schema_element => [
      ["getActivityResult", ["GetActivityReply", XSD::QName.new(NsV2, "GetActivityResult")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => GetActivityReply,
    :schema_name => XSD::QName.new(NsV2, "GetActivityReply"),
    :schema_element => [
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsPosWebService, "Message")], [0, 1]],
      ["resultCode", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebService, "ResultCode")], [0, 1]],
      ["activity", ["ArrayOfActivityDetail", XSD::QName.new(NsV2, "Activity")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ArrayOfActivityDetail,
    :schema_name => XSD::QName.new(NsV2, "ArrayOfActivityDetail"),
    :schema_element => [
      ["activityDetail", ["ActivityDetail[]", XSD::QName.new(NsV2, "ActivityDetail")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => ActivityDetail,
    :schema_name => XSD::QName.new(NsV2, "ActivityDetail"),
    :schema_element => [
      ["customerId", [nil, XSD::QName.new(NsV2, "CustomerId")], [0, 1]],
      ["locationId", [nil, XSD::QName.new(NsV2, "LocationId")], [0, 1]],
      ["orderId", ["SOAP::SOAPLong", XSD::QName.new(NsV2, "OrderId")], [0, 1]],
      ["planId", ["SOAP::SOAPInt", XSD::QName.new(NsV2, "PlanId")], [0, 1]],
      ["time", ["DateTimeOffset", XSD::QName.new(NsV2, "Time")], [0, 1]],
      ["type", ["SOAP::SOAPUnsignedByte", XSD::QName.new(NsV2, "Type")], [0, 1]],
      ["value", ["SOAP::SOAPDecimal", XSD::QName.new(NsV2, "Value")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => GetAdjustmentDetails,
    :schema_name => XSD::QName.new(NsV2, "GetAdjustmentDetails"),
    :schema_element => [
      ["request", "GetAdjustmentDetailsRequest", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => GetAdjustmentDetailsRequest,
    :schema_name => XSD::QName.new(NsV2, "GetAdjustmentDetailsRequest"),
    :schema_element => [
      ["groupToken", ["SOAP::SOAPString", XSD::QName.new(NsV2, "GroupToken")], [0, 1]],
      ["includeBulkAdjustments", ["SOAP::SOAPBoolean", XSD::QName.new(NsV2, "IncludeBulkAdjustments")], [0, 1]],
      ["recordOffset", ["SOAP::SOAPUnsignedInt", XSD::QName.new(NsV2, "RecordOffset")], [0, 1]],
      ["startTime", ["DateTimeOffset", XSD::QName.new(NsV2, "StartTime")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => GetAdjustmentDetailsResponse,
    :schema_name => XSD::QName.new(NsV2, "GetAdjustmentDetailsResponse"),
    :schema_element => [
      ["getAdjustmentDetailsResult", ["GetAdjustmentDetailsReply", XSD::QName.new(NsV2, "GetAdjustmentDetailsResult")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => GetAdjustmentDetailsReply,
    :schema_name => XSD::QName.new(NsV2, "GetAdjustmentDetailsReply"),
    :schema_element => [
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsPosWebService, "Message")], [0, 1]],
      ["resultCode", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebService, "ResultCode")], [0, 1]],
      ["adjustments", ["ArrayOfAdjustmentDetail", XSD::QName.new(NsV2, "Adjustments")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ArrayOfAdjustmentDetail,
    :schema_name => XSD::QName.new(NsV2, "ArrayOfAdjustmentDetail"),
    :schema_element => [
      ["adjustmentDetail", ["AdjustmentDetail[]", XSD::QName.new(NsV2, "AdjustmentDetail")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => AdjustmentDetail,
    :schema_name => XSD::QName.new(NsV2, "AdjustmentDetail"),
    :schema_element => [
      ["activityType", ["SOAP::SOAPInt", XSD::QName.new(NsV2, "ActivityType")], [0, 1]],
      ["customerId", [nil, XSD::QName.new(NsV2, "CustomerId")], [0, 1]],
      ["isBulkAdjustment", ["SOAP::SOAPBoolean", XSD::QName.new(NsV2, "IsBulkAdjustment")], [0, 1]],
      ["notes", ["SOAP::SOAPString", XSD::QName.new(NsV2, "Notes")], [0, 1]],
      ["planId", ["SOAP::SOAPInt", XSD::QName.new(NsV2, "PlanId")], [0, 1]],
      ["reasonId", ["SOAP::SOAPInt", XSD::QName.new(NsV2, "ReasonId")], [0, 1]],
      ["rewardId", ["SOAP::SOAPInt", XSD::QName.new(NsV2, "RewardId")], [0, 1]],
      ["rewardValue", ["SOAP::SOAPDecimal", XSD::QName.new(NsV2, "RewardValue")], [0, 1]],
      ["time", ["DateTimeOffset", XSD::QName.new(NsV2, "Time")], [0, 1]],
      ["value", ["SOAP::SOAPDecimal", XSD::QName.new(NsV2, "Value")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => GetAwardRedemptions,
    :schema_name => XSD::QName.new(NsV2, "GetAwardRedemptions"),
    :schema_element => [
      ["request", "GetAwardRedemptionsRequest", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => GetAwardRedemptionsRequest,
    :schema_name => XSD::QName.new(NsV2, "GetAwardRedemptionsRequest"),
    :schema_element => [
      ["customerId", [nil, XSD::QName.new(NsV2, "CustomerId")], [0, 1]],
      ["groupToken", ["SOAP::SOAPString", XSD::QName.new(NsV2, "GroupToken")], [0, 1]],
      ["recordOffset", ["SOAP::SOAPUnsignedInt", XSD::QName.new(NsV2, "RecordOffset")], [0, 1]],
      ["startTime", ["DateTimeOffset", XSD::QName.new(NsV2, "StartTime")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => GetAwardRedemptionsResponse,
    :schema_name => XSD::QName.new(NsV2, "GetAwardRedemptionsResponse"),
    :schema_element => [
      ["getAwardRedemptionsResult", ["GetAwardRedemptionsReply", XSD::QName.new(NsV2, "GetAwardRedemptionsResult")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => GetAwardRedemptionsReply,
    :schema_name => XSD::QName.new(NsV2, "GetAwardRedemptionsReply"),
    :schema_element => [
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsPosWebService, "Message")], [0, 1]],
      ["resultCode", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebService, "ResultCode")], [0, 1]],
      ["redemptions", ["ArrayOfAwardRedemption", XSD::QName.new(NsV2, "Redemptions")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => ArrayOfAwardRedemption,
    :schema_name => XSD::QName.new(NsV2, "ArrayOfAwardRedemption"),
    :schema_element => [
      ["awardRedemption", ["AwardRedemption[]", XSD::QName.new(NsV2, "AwardRedemption")], [0, nil]]
    ]
  )

  LiteralRegistry.register(
    :class => AwardRedemption,
    :schema_name => XSD::QName.new(NsV2, "AwardRedemption"),
    :schema_element => [
      ["awardId", ["SOAP::SOAPInt", XSD::QName.new(NsV2, "AwardId")], [0, 1]],
      ["id", ["SOAP::SOAPInt", XSD::QName.new(NsV2, "Id")], [0, 1]],
      ["locationId", [nil, XSD::QName.new(NsV2, "LocationId")], [0, 1]],
      ["orderId", ["SOAP::SOAPLong", XSD::QName.new(NsV2, "OrderId")], [0, 1]],
      ["time", ["DateTimeOffset", XSD::QName.new(NsV2, "Time")], [0, 1]],
      ["value", ["SOAP::SOAPDecimal", XSD::QName.new(NsV2, "Value")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => RedeemAwards,
    :schema_name => XSD::QName.new(NsV2, "RedeemAwards"),
    :schema_element => [
      ["request", "RedeemAwardsRequest", [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => RedeemAwardsRequest,
    :schema_name => XSD::QName.new(NsV2, "RedeemAwardsRequest"),
    :schema_element => [
      ["allowPartialSuccess", ["SOAP::SOAPBoolean", XSD::QName.new(NsV2, "AllowPartialSuccess")], [0, 1]],
      ["awardIds", ["ArrayOfint", XSD::QName.new(NsV2, "AwardIds")], [0, 1]],
      ["groupToken", ["SOAP::SOAPString", XSD::QName.new(NsV2, "GroupToken")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => RedeemAwardsResponse,
    :schema_name => XSD::QName.new(NsV2, "RedeemAwardsResponse"),
    :schema_element => [
      ["redeemAwardsResult", ["RedeemAwardsReply", XSD::QName.new(NsV2, "RedeemAwardsResult")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => RedeemAwardsReply,
    :schema_name => XSD::QName.new(NsV2, "RedeemAwardsReply"),
    :schema_element => [
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsPosWebService, "Message")], [0, 1]],
      ["resultCode", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebService, "ResultCode")], [0, 1]],
      ["alreadyRedeemedAwardIds", ["ArrayOfint", XSD::QName.new(NsV2, "AlreadyRedeemedAwardIds")], [0, 1]],
      ["invalidAwardIds", ["ArrayOfint", XSD::QName.new(NsV2, "InvalidAwardIds")], [0, 1]],
      ["successfulAwardIds", ["ArrayOfint", XSD::QName.new(NsV2, "SuccessfulAwardIds")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => AddManualAdjustmentRequest,
    :schema_name => XSD::QName.new(NsPosWebServiceLoyaltyVersion2Operations, "AddManualAdjustmentRequest"),
    :schema_element => [
      ["customerId", [nil, XSD::QName.new(NsPosWebServiceLoyaltyVersion2Operations, "CustomerId")], [0, 1]],
      ["groupToken", ["SOAP::SOAPString", XSD::QName.new(NsPosWebServiceLoyaltyVersion2Operations, "GroupToken")], [0, 1]],
      ["planId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceLoyaltyVersion2Operations, "PlanId")], [0, 1]],
      ["reasonId", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebServiceLoyaltyVersion2Operations, "ReasonId")], [0, 1]],
      ["value", ["SOAP::SOAPDecimal", XSD::QName.new(NsPosWebServiceLoyaltyVersion2Operations, "Value")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => Reply,
    :schema_name => XSD::QName.new(NsPosWebService, "Reply"),
    :schema_element => [
      ["message", ["SOAP::SOAPString", XSD::QName.new(NsPosWebService, "Message")], [0, 1]],
      ["resultCode", ["SOAP::SOAPInt", XSD::QName.new(NsPosWebService, "ResultCode")], [0, 1]]
    ]
  )

  LiteralRegistry.register(
    :class => DateTimeOffset,
    :schema_name => XSD::QName.new(NsSystem, "DateTimeOffset"),
    :schema_element => [
      ["dateTime", ["SOAP::SOAPDateTime", XSD::QName.new(NsSystem, "DateTime")]],
      ["offsetMinutes", ["SOAP::SOAPShort", XSD::QName.new(NsSystem, "OffsetMinutes")]]
    ]
  )

  LiteralRegistry.register(
    :class => ArrayOfint,
    :schema_name => XSD::QName.new(NsArrays, "ArrayOfint"),
    :schema_element => [
      ["int", "SOAP::SOAPInt[]", [0, nil]]
    ]
  )
end
